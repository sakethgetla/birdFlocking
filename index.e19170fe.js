var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function t(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}function n(e,t){return Object.keys(t).forEach((function(n){"default"===n||"__esModule"===n||e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})})),e}var r={},s={},o=e.parcelRequire86ed;null==o&&((o=function(e){if(e in r)return r[e].exports;if(e in s){var t=s[e];delete s[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){s[e]=t},e.parcelRequire86ed=o),o.register("kjyEk",(function(e,t){})),o.register("cmoHh",(function(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new r(e),o=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.alea=o}(0,e,"function"==typeof define&&define)})),o.register("euRi5",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor128=o}(0,e,"function"==typeof define&&define)})),o.register("hDsEw",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorwow=o}(0,e,"function"==typeof define&&define)})),o.register("3J2Zm",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.x&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorshift7=o}(0,e,"function"==typeof define&&define)})),o.register("6Px8M",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,o=t.i;return t.w=r=r+1640531527|0,n=s[o+34&127],e=s[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[o]=n^e,t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,s,o,a,i=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,o=-32;o<l;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=a+1640531527|0,s=0==(n=i[127&o]^=r+a)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,o=512;o>0;--o)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=a,e.X=i,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.X&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor4096=o}(0,e,"function"==typeof define&&define)})),o.register("lDm0S",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.tychei=o}(0,e,"function"==typeof define&&define)}));class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class i{refCount(e){return l("refCount")}incRef(e){return l("incRef")}timerAvailable(){return!0}time(e){return l("time")}read(e){return l("read")}readSync(e){return l("readSync")}readToGPU(e,t){return l("readToGPU")}numDataIds(){return l("numDataIds")}disposeData(e,t){return l("disposeData")}write(e,t,n){return l("write")}move(e,t,n,r,s){return l("move")}memory(){return l("memory")}floatPrecision(){return l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return l("dispose")}}function l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var u={};function c(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,f(e,t,n)}function h(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,f(e,n,r),f(t,n,r)}function d(e,t,n){return Math.max(e,Math.min(t,n))}function p(e){return e%2==0?e:e+1}function f(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function g(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function m(e,t){const n=Math.random();return t*n+(1-n)*e}function y(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function b(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function k(e,t,n=""){b(x(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function w(e){b(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function I(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||C(e)&&!n)for(let r=0;r<e.length;++r)I(e[r],t,n);else t.push(e);return t}function S(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function v(e){return 0===e.length}function x(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function E(e){return e%1==0}function T(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function N(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function A(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return c(t),t}function M(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function F(e,t=(e=>0),n){return new Promise(((r,s)=>{let o=0;const a=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?s():setTimeout(a,i)};a()}))}function D(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function R(e,t){const n=t.length;return b((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),b(e.every((e=>E(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function $(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||s?null:R(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[a]||o[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function B(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function O(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function P(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function z(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function C(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function L(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function W(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function U(e){return"string"==typeof e||e instanceof String}function H(e){return"boolean"==typeof e}function V(e){return"number"==typeof e}function q(e){return Array.isArray(e)?q(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":V(e)?"float32":U(e)?"string":H(e)?"bool":"float32"}function G(e){return!!(e&&e.constructor&&e.call&&e.apply)}function K(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function j(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Z(e,t,n,r=!1){const s=new Array;if(1===t.length){const o=t[0]*(r?2:1);for(let t=0;t<o;t++)s[t]=n[e+t]}else{const o=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<o;t++)s[t]=Z(e+t*i,a,n,r)}return s}function Y(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Z(0,e,t,n)}function J(e,t){const n=X(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function X(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Y(e,new Float32Array(n));if("int32"===t)return Y(e,new Int32Array(n));if("bool"===t)return Y(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ee(e){e.forEach((t=>{b(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function te(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ne(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function re(e){return e&&e.then&&"function"==typeof e.then}t(u,"shuffle",(()=>c)),t(u,"swap",(()=>f)),t(u,"shuffleCombo",(()=>h)),t(u,"clamp",(()=>d)),t(u,"nearestLargerEven",(()=>p)),t(u,"sum",(()=>g)),t(u,"randUniform",(()=>m)),t(u,"distSquared",(()=>y)),t(u,"assert",(()=>b)),t(u,"assertShapesMatch",(()=>k)),t(u,"arraysEqual",(()=>x)),t(u,"assertNonNull",(()=>w)),t(u,"flatten",(()=>I)),t(u,"isTypedArray",(()=>C)),t(u,"sizeFromShape",(()=>S)),t(u,"isScalarShape",(()=>v)),t(u,"isInt",(()=>E)),t(u,"tanh",(()=>T)),t(u,"sizeToSquarishShape",(()=>N)),t(u,"createShuffledIndices",(()=>A)),t(u,"rightPad",(()=>M)),t(u,"repeatedTry",(()=>F)),t(u,"inferFromImplicitShape",(()=>D)),t(u,"parseAxisParam",(()=>R)),t(u,"squeezeShape",(()=>$)),t(u,"getTypedArrayFromDType",(()=>_)),t(u,"getArrayFromDType",(()=>B)),t(u,"checkConversionForErrors",(()=>O)),t(u,"isValidDtype",(()=>P)),t(u,"hasEncodingLoss",(()=>z)),t(u,"bytesPerElement",(()=>L)),t(u,"bytesFromStringArray",(()=>W)),t(u,"isString",(()=>U)),t(u,"isBoolean",(()=>H)),t(u,"isNumber",(()=>V)),t(u,"inferDtype",(()=>q)),t(u,"isFunction",(()=>G)),t(u,"nearestDivisor",(()=>K)),t(u,"computeStrides",(()=>j)),t(u,"toNestedArray",(()=>Y)),t(u,"makeOnesTypedArray",(()=>J)),t(u,"makeZerosTypedArray",(()=>X)),t(u,"makeZerosNestedTypedArray",(()=>Q)),t(u,"assertNonNegativeIntegerDimensions",(()=>ee)),t(u,"locToIndex",(()=>te)),t(u,"indexToLoc",(()=>ne)),t(u,"isPromise",(()=>re));class se{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(re(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function oe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ae(){return ie}let ie=null;var le,ue,ce={},he=ce={};function de(){throw new Error("setTimeout has not been defined")}function pe(){throw new Error("clearTimeout has not been defined")}function fe(e){if(le===setTimeout)return setTimeout(e,0);if((le===de||!le)&&setTimeout)return le=setTimeout,setTimeout(e,0);try{return le(e,0)}catch(t){try{return le.call(null,e,0)}catch(t){return le.call(this,e,0)}}}!function(){try{le="function"==typeof setTimeout?setTimeout:de}catch(e){le=de}try{ue="function"==typeof clearTimeout?clearTimeout:pe}catch(e){ue=pe}}();var ge,me=[],ye=!1,be=-1;function ke(){ye&&ge&&(ye=!1,ge.length?me=ge.concat(me):be=-1,me.length&&we())}function we(){if(!ye){var e=fe(ke);ye=!0;for(var t=me.length;t;){for(ge=me,me=[];++be<t;)ge&&ge[be].run();be=-1,t=me.length}ge=null,ye=!1,function(e){if(ue===clearTimeout)return clearTimeout(e);if((ue===pe||!ue)&&clearTimeout)return ue=clearTimeout,clearTimeout(e);try{ue(e)}catch(t){try{return ue.call(null,e)}catch(t){return ue.call(this,e)}}}(e)}}function Ie(e,t){this.fun=e,this.array=t}function Se(){}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let ve;function xe(){if(null==ve){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==ce)t=ce;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}ve=t}return ve}function Ee(e,t){const n=function(){const e=xe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}he.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];me.push(new Ie(e,t)),1!==me.length||ye||fe(we)},Ie.prototype.run=function(){this.fun.apply(null,this.array)},he.title="browser",he.browser=!0,he.env={},he.argv=[],he.version="",he.versions={},he.on=Se,he.addListener=Se,he.once=Se,he.off=Se,he.removeListener=Se,he.removeAllListeners=Se,he.emit=Se,he.prependListener=Se,he.prependOnceListener=Se,he.listeners=function(e){return[]},he.binding=function(e){throw new Error("process.binding is not supported")},he.cwd=function(){return"/"},he.chdir=function(e){throw new Error("process.chdir is not supported")},he.umask=function(){return 0};var Te={};function Ne(...e){ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(...e)}function Ae(...e){ae().getBool("IS_TEST")||ae().getBool("PROD")||console.log(...e)}t(Te,"warn",(()=>Ne)),t(Te,"log",(()=>Ae));const Me=Ee("kernelRegistry",(()=>new Map)),Fe=Ee("gradRegistry",(()=>new Map));function De(e,t){const n=Be(e,t);return Me.get(n)}function Re(e){return Fe.get(e)}function $e(e){const t=Me.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===e&&n.push(a)}return n}function _e(e){const{kernelName:t,backendName:n}=e,r=Be(t,n);Me.has(r)&&Ne(`The kernel '${t}' for backend '${n}' is already registered`),Me.set(r,e)}function Be(e,t){return`${t}_${e}`}var Oe={};t(Oe,"createScalarValue",(()=>St)),t(Oe,"encodeString",(()=>Tt)),t(Oe,"toTypedArray",(()=>vt)),t(Oe,"now",(()=>xt)),t(Oe,"fetch",(()=>Et)),t(Oe,"decodeString",(()=>Nt));var Pe={};t(Pe,"hexToLong",(()=>ct)),t(Pe,"fingerPrint64",(()=>It));var ze;ze=Le;var Ce=null;try{Ce=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Le(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function We(e){return!0===(e&&e.__isLong__)}Le.prototype.__isLong__,Object.defineProperty(Le.prototype,"__isLong__",{value:!0}),Le.isLong=We;var Ue={},He={};function Ve(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=He[e])?r:(n=Ge(e,(0|e)<0?-1:0,!0),s&&(He[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=Ue[e])?r:(n=Ge(e,e<0?-1:0,!1),s&&(Ue[e]=n),n)}function qe(e,t){if(isNaN(e))return t?tt:et;if(t){if(e<0)return tt;if(e>=Je)return at}else{if(e<=-Xe)return it;if(e+1>=Xe)return ot}return e<0?qe(-e,t).neg():Ge(e%Ye|0,e/Ye|0,t)}function Ge(e,t,n){return new Le(e,t,n)}Le.fromInt=Ve,Le.fromNumber=qe,Le.fromBits=Ge;var Ke=Math.pow;function je(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return et;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return je(e.substring(1),t,n).neg();for(var s=qe(Ke(n,8)),o=et,a=0;a<e.length;a+=8){var i=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+i),n);if(i<8){var u=qe(Ke(n,i));o=o.mul(u).add(qe(l))}else o=(o=o.mul(s)).add(qe(l))}return o.unsigned=t,o}function Ze(e,t){return"number"==typeof e?qe(e,t):"string"==typeof e?je(e,t):Ge(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Le.fromString=je,Le.fromValue=Ze;var Ye=4294967296,Je=Ye*Ye,Xe=Je/2,Qe=Ve(16777216),et=Ve(0);Le.ZERO=et;var tt=Ve(0,!0);Le.UZERO=tt;var nt=Ve(1);Le.ONE=nt;var rt=Ve(1,!0);Le.UONE=rt;var st=Ve(-1);Le.NEG_ONE=st;var ot=Ge(-1,2147483647,!1);Le.MAX_VALUE=ot;var at=Ge(-1,-1,!0);Le.MAX_UNSIGNED_VALUE=at;var it=Ge(0,-2147483648,!1);Le.MIN_VALUE=it;var lt=Le.prototype;lt.toInt=function(){return this.unsigned?this.low>>>0:this.low},lt.toNumber=function(){return this.unsigned?(this.high>>>0)*Ye+(this.low>>>0):this.high*Ye+(this.low>>>0)},lt.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(it)){var t=qe(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=qe(Ke(e,6),this.unsigned),o=this,a="";;){var i=o.div(s),l=(o.sub(i.mul(s)).toInt()>>>0).toString(e);if((o=i).isZero())return l+a;for(;l.length<6;)l="0"+l;a=""+l+a}},lt.getHighBits=function(){return this.high},lt.getHighBitsUnsigned=function(){return this.high>>>0},lt.getLowBits=function(){return this.low},lt.getLowBitsUnsigned=function(){return this.low>>>0},lt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(it)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},lt.isZero=function(){return 0===this.high&&0===this.low},lt.eqz=lt.isZero,lt.isNegative=function(){return!this.unsigned&&this.high<0},lt.isPositive=function(){return this.unsigned||this.high>=0},lt.isOdd=function(){return 1==(1&this.low)},lt.isEven=function(){return 0==(1&this.low)},lt.equals=function(e){return We(e)||(e=Ze(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},lt.eq=lt.equals,lt.notEquals=function(e){return!this.eq(e)},lt.neq=lt.notEquals,lt.ne=lt.notEquals,lt.lessThan=function(e){return this.comp(e)<0},lt.lt=lt.lessThan,lt.lessThanOrEqual=function(e){return this.comp(e)<=0},lt.lte=lt.lessThanOrEqual,lt.le=lt.lessThanOrEqual,lt.greaterThan=function(e){return this.comp(e)>0},lt.gt=lt.greaterThan,lt.greaterThanOrEqual=function(e){return this.comp(e)>=0},lt.gte=lt.greaterThanOrEqual,lt.ge=lt.greaterThanOrEqual,lt.compare=function(e){if(We(e)||(e=Ze(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},lt.comp=lt.compare,lt.negate=function(){return!this.unsigned&&this.eq(it)?it:this.not().add(nt)},lt.neg=lt.negate,lt.add=function(e){We(e)||(e=Ze(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,u+=(c+=r+i)>>>16,l+=(u+=n+a)>>>16,l+=t+o,Ge((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},lt.subtract=function(e){return We(e)||(e=Ze(e)),this.add(e.neg())},lt.sub=lt.subtract,lt.multiply=function(e){if(this.isZero())return et;if(We(e)||(e=Ze(e)),Ce)return Ge(Ce.mul(this.low,this.high,e.low,e.high),Ce.get_high(),this.unsigned);if(e.isZero())return et;if(this.eq(it))return e.isOdd()?it:et;if(e.eq(it))return this.isOdd()?it:et;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Qe)&&e.lt(Qe))return qe(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=s*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=s*i)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*i)>>>16,c&=65535,u+=(c+=s*a)>>>16,u+=t*l+n*i+r*a+s*o,Ge((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},lt.mul=lt.multiply,lt.divide=function(e){if(We(e)||(e=Ze(e)),e.isZero())throw Error("division by zero");var t,n,r;if(Ce)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?Ge((this.unsigned?Ce.div_u:Ce.div_s)(this.low,this.high,e.low,e.high),Ce.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?tt:et;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return tt;if(e.gt(this.shru(1)))return rt;r=tt}else{if(this.eq(it))return e.eq(nt)||e.eq(st)?it:e.eq(it)?nt:(t=this.shr(1).div(e).shl(1)).eq(et)?e.isNegative()?nt:st:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(it))return this.unsigned?tt:et;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=et}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:Ke(2,s-48),a=qe(t),i=a.mul(e);i.isNegative()||i.gt(n);)i=(a=qe(t-=o,this.unsigned)).mul(e);a.isZero()&&(a=nt),r=r.add(a),n=n.sub(i)}return r},lt.div=lt.divide,lt.modulo=function(e){return We(e)||(e=Ze(e)),Ce?Ge((this.unsigned?Ce.rem_u:Ce.rem_s)(this.low,this.high,e.low,e.high),Ce.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},lt.mod=lt.modulo,lt.rem=lt.modulo,lt.not=function(){return Ge(~this.low,~this.high,this.unsigned)},lt.and=function(e){return We(e)||(e=Ze(e)),Ge(this.low&e.low,this.high&e.high,this.unsigned)},lt.or=function(e){return We(e)||(e=Ze(e)),Ge(this.low|e.low,this.high|e.high,this.unsigned)},lt.xor=function(e){return We(e)||(e=Ze(e)),Ge(this.low^e.low,this.high^e.high,this.unsigned)},lt.shiftLeft=function(e){return We(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ge(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ge(0,this.low<<e-32,this.unsigned)},lt.shl=lt.shiftLeft,lt.shiftRight=function(e){return We(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ge(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},lt.shr=lt.shiftRight,lt.shiftRightUnsigned=function(e){if(We(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?Ge(this.low>>>e|t<<32-e,t>>>e,this.unsigned):Ge(32===e?t:t>>>e-32,0,this.unsigned)},lt.shru=lt.shiftRightUnsigned,lt.shr_u=lt.shiftRightUnsigned,lt.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this},lt.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)},lt.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},lt.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},lt.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Le.fromBytes=function(e,t,n){return n?Le.fromBytesLE(e,t):Le.fromBytesBE(e,t)},Le.fromBytesLE=function(e,t){return new Le(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Le.fromBytesBE=function(e,t){return new Le(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const ut=ze.default||ze;function ct(e){return ut.fromString(e,!0,16)}const ht=ct("c3a5c85c97cb3127"),dt=ct("b492b66fbe98f273"),pt=ct("9ae16a3b2f90404f");function ft(e){return e.xor(e.shru(47))}function gt(e,t,n){const r=e.slice(t,t+n);return ut.fromBytes(Array.from(r),!0,!0)}function mt(e,t){return gt(e,t,8)}function yt(e,t){return gt(e,t,4)}function bt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function kt(e,t,n=ct("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function wt(e,t,n,r){return function(e,t,n,r,s,o){s=s.add(e),o=bt(o.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),o=o.add(bt(s,44)),[s.add(r),o.add(a)]}(mt(e,t),mt(e,t+8),mt(e,t+16),mt(e,t+24),n,r)}function It(e,t=e.length){const n=ut.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=pt.add(2*t),r=mt(e,0).add(pt),s=mt(e,t-8);return kt(bt(s,37).mul(n).add(r),bt(r,25).add(s).mul(n),n)}if(t>=4){const n=pt.add(2*t);return kt(yt(e,0).shl(3).add(t),yt(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ft(pt.mul(n).xor(ht.mul(r))).mul(pt)}return pt}(e,t):function(e,t=e.length){const n=pt.add(2*t),r=mt(e,0).mul(dt),s=mt(e,8),o=mt(e,t-8).mul(n),a=mt(e,t-16).mul(pt);return kt(bt(r.add(s),43).add(bt(o,30)).add(a),r.add(bt(s.add(pt),18)).add(o),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=pt.add(2*t),r=mt(e,0).mul(pt),s=mt(e,8),o=mt(e,t-8).mul(n),a=mt(e,t-16).mul(pt),i=bt(r.add(s),43).add(bt(o,30)).add(a),l=kt(i,r.add(bt(s.add(pt),18)).add(o),n),u=mt(e,16).mul(n),c=mt(e,24),h=i.add(mt(e,t-32)).mul(n),d=l.add(mt(e,t-24)).mul(n);return kt(bt(u.add(c),43).add(bt(h,30)).add(d),u.add(bt(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(dt).add(113),o=ft(s.mul(pt).add(113)).mul(pt),a=[ut.UZERO,ut.UZERO],i=[ut.UZERO,ut.UZERO];r=r.mul(pt).add(mt(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=bt(r.add(s).add(a[0]).add(mt(e,l+8)),37).mul(dt),s=bt(s.add(a[1]).add(mt(e,l+48)),42).mul(dt),r=r.xor(i[1]),s=s.add(a[0]).add(mt(e,l+40)),o=bt(o.add(i[0]),33).mul(dt),a=wt(e,l,a[1].mul(dt),r.add(i[0])),i=wt(e,l+32,o.add(i[1]),s.add(mt(e,l+16))),[o,r]=[r,o],l+=64}while(l!==u);const h=dt.add(o.and(255).shl(1));return l=c,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=bt(r.add(s).add(a[0]).add(mt(e,l+8)),37).mul(h),s=bt(s.add(a[1]).add(mt(e,l+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(mt(e,l+40))),o=bt(o.add(i[0]),33).mul(h),a=wt(e,l,a[1].mul(h),r.add(i[0])),i=wt(e,l+32,o.add(i[1]),s.add(mt(e,l+16))),[o,r]=[r,o],kt(kt(a[0],i[0],h).add(ft(s).mul(ht)).add(o),kt(a[1],i[1],h).add(r),h)}function St(e,t){return"string"===t?Tt(e):vt([e],t)}function vt(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=I(e)),ae().getBool("DEBUG")&&O(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function xt(){return ae().platform.now()}function Et(e,t){return ae().platform.fetch(e,t)}function Tt(e,t="utf-8"){return t=t||"utf-8",ae().platform.encode(e,t)}function Nt(e,t="utf-8"){return t=t||"utf-8",ae().platform.decode(e,t)}n(Oe,u),n(Oe,Pe);class At{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ft)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const a=xt();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:xt()-a})}if(ae().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Mt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:o}=e;n.forEach((e=>{Promise.all([e.data(),r,o]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Mt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ft{logKernelProfile(e,t,n,r,s,o){const a="number"==typeof r?M(`${r}ms`,9):r.error,i=M(e,25),l=t.rank,u=t.size,c=M(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Dt(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const o=e[n],a=o.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){o.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[o.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(o[n.outputs[e].id]){for(const e in r)o[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}function Rt(e,t,n,r){for(let s=t.length-1;s>=0;s--){const o=t[s],a=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=o.inputs[t];if(!x(s.shape,a.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}function $t(e,t,n,r){const s=j(t),o=function(e,t,n,r){const s=S(t),o=r[r.length-1],a=new Array(o).fill(0),i=t.length,l="complex64"===n?Pt(e):e;if(i>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)a[e]=Math.max(a[e],_t(l[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,i=Ot(e,t,n,s,o),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map((e=>"    "+e)).join("\n")),l.join("\n")}function _t(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:U(e)?`'${e}'`:"bool"===n?Bt(e):parseFloat(e.toFixed(7)).toString(),M(r,t)}function Bt(e){return 0===e?"false":"true"}function Ot(e,t,n,r,s,o=!0){const a="complex64"===n?2:1,i=t[0],l=t.length;if(0===l){if("complex64"===n){return[_t(Pt(e)[0],0,n)]}return"bool"===n?[Bt(e[0])]:[e[0].toString()]}if(1===l){if(i>20){const t=3*a;let r=Array.from(e.slice(0,t)),o=Array.from(e.slice((i-3)*a,i*a));return"complex64"===n&&(r=Pt(r),o=Pt(o)),["["+r.map(((e,t)=>_t(e,s[t],n))).join(", ")+", ..., "+o.map(((e,t)=>_t(e,s[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Pt(e):Array.from(e)).map(((e,t)=>_t(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(i>20){for(let t=0;t<3;t++){const r=t*h,o=r+h;d.push(...Ot(e.slice(r,o),u,n,c,s,!1))}d.push("...");for(let t=i-3;t<i;t++){const r=t*h,o=r+h;d.push(...Ot(e.slice(r,o),u,n,c,s,t===i-1))}}else for(let t=0;t<i;t++){const r=t*h,o=r+h;d.push(...Ot(e.slice(r,o),u,n,c,s,t===i-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Pt(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class zt{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=S(e),null!=n){const e=n.length;b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||B(t,this.size),this.strides=j(e)}set(e,...t){0===t.length&&(t=[0]),b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ct().makeTensor(this.values,this.shape,this.dtype)}}let Ct=null,Lt=null,Wt=null;class Ut{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=S(e),this.strides=j(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Lt.buffer(this.shape,this.dtype,e)}bufferSync(){return Lt.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Y(this.shape,e,"complex64"===this.dtype)}arraySync(){return Y(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ct().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Nt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ct().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ct().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Nt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ct().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ct().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Lt.print(this,e)}clone(){return this.throwIfDisposed(),Lt.clone(this)}toString(e=!1){return $t(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Lt.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ct().makeVariable(this,e,t,n)}}Object.defineProperty(Ut,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ee("Tensor",(()=>Ut));class Ht extends Ut{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!x(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ct().disposeTensor(this),this.dataId=e.dataId,Ct().incRef(this,null)}dispose(){Ct().disposeVariable(this),this.isDisposedInternal=!0}}var Vt,qt,Gt,Kt,jt,Zt,Yt,Jt,Xt,Qt;Object.defineProperty(Ht,Symbol.hasInstance,{value:e=>e instanceof Ut&&null!=e.assign&&e.assign instanceof Function}),(qt=Vt||(Vt={})).R0="R0",qt.R1="R1",qt.R2="R2",qt.R3="R3",qt.R4="R4",qt.R5="R5",qt.R6="R6",(Kt=Gt||(Gt={})).float32="float32",Kt.int32="int32",Kt.bool="int32",Kt.complex64="complex64",(Zt=jt||(jt={})).float32="float32",Zt.int32="int32",Zt.bool="bool",Zt.complex64="complex64",(Jt=Yt||(Yt={})).float32="float32",Jt.int32="float32",Jt.bool="float32",Jt.complex64="complex64",(Qt=Xt||(Xt={})).float32="complex64",Qt.int32="complex64",Qt.bool="complex64",Qt.complex64="complex64";const en={float32:Yt,int32:Gt,bool:jt,complex64:Xt};function tn(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return en[e][t]}function nn(e,t){if(e.dtype===t.dtype)return[e,t];const n=tn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function rn(e){const t=[];return sn(e,t,new Set),t}function sn(e,t,n){if(null==e)return;if(e instanceof Ut)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),sn(r,t,n))}}function on(e){return null!=e.kernelName}class an{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ln{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new an}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ne(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new At(this.backendInstance),!0}setupRegisteredKernels(){$e(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){$e(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof i||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ne(`Initialization of backend ${e} failed`),Ne(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Ne(`Initialization of backend ${e} failed`),Ne(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ln.nextTensorId++}nextVariableId(){return ln.nextVariableId++}clone(e){const t=cn.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return cn.runKernel("Cast",t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=De(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let a,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=on(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(on(e)){const{kernelName:t,inputs:s,attrs:o}=e;null==this.backendName&&this.backend;const l=De(t,this.backendName);b(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();i=l.kernelFunc({inputs:s,attrs:o,backend:this.backend});const a=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=on(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Re(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let o;r.saveAllInputs?(b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(t).map((e=>t[e]))):o=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return o.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&U(e[0])&&(s=e.map((e=>Tt(e))));const o=r.write(s,t,n),a=new Ut(t,n,o,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(o),t=W(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,o=new Ut(r,s,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Ht(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*L(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ht||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*L(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Re(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=X(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rn(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));b(s instanceof Ut,(()=>"The result y returned by f() must be a tensor."));const o=Dt(this.state.activeTape,t,s);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=J(S(e),"float32");return cn.makeTensor(t,e,"float32")}(s.shape):n,Rt(e,o,(e=>this.tidy(e)),hn);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return b(G(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;b(t.every((e=>e instanceof Ut)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),b(n.value instanceof Ut,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),b(G(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),o=Array.isArray(s)?s:[s];b(o.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),b(o.every((e=>e instanceof Ut)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return o.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=xt(),n=await this.backend.time(e);return n.wallMs=xt()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new an;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function un(){const e=xe();if(null==e._tfengine){const t=new se(e);e._tfengine=new ln(t)}var t;return t=e._tfengine.ENV,ie=t,Ct=()=>e._tfengine,e._tfengine}ln.nextTensorId=0,ln.nextVariableId=0;const cn=un();function hn(e,t){const n={a:e,b:t};return cn.runKernel("Add",n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=ae();function pn(e,t){let n=e;if(C(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||C(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ae().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fn(e,r,[]),r}function fn(e,t,n){if(n=n||[],!Array.isArray(e)&&!C(e))return void b(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));b(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),b(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)fn(e[t],r,n.concat(t))}function gn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function mn(e,t,n,r="numeric"){if(e instanceof Ut)return gn(r,e.dtype,t,n),e;let s=q(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),gn(r,s,t,n),null==e||!C(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const o=pn(e,s);C(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?vt(e,s):I(e,[],!0);return cn.makeTensor(a,o,s)}function yn(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>mn(e,`${t}[${s}]`,n,r)))}dn.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),dn.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),dn.registerFlag("IS_NODE",(()=>void 0!==ce&&void 0!==ce.versions&&void 0!==ce.versions.node)),dn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),dn.registerFlag("PROD",(()=>!1)),dn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>dn.getBool("DEBUG"))),dn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),dn.registerFlag("IS_TEST",(()=>!1)),dn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),dn.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),dn.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),dn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1));function bn(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{cn.startScope(n);try{const t=r(...e);return re(t)&&console.error("Cannot return a Promise inside of tidy."),cn.endScope(t),t}catch(e){throw cn.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const kn=bn({complex_:function(e,t){const n=mn(e,"real","complex"),r=mn(t,"imag","complex");k(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return cn.runKernel("Complex",s)}});function wn(e,t,n,r){if(null==r&&(r=q(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!C(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ee(t);const e=S(t),r=S(n);b(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==S(t.slice(e));b(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return C(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?vt(e,r):I(e,[],!0),cn.makeTensor(e,t,r)}function In(e,t,n){return wn(e,t,pn(e,n),n)}var Sn,vn,xn;vn=function(e){var t,n,r=$n(e),s=r[0],o=r[1],a=new Mn(function(e,t,n){return 3*(t+n)/4-n}(0,s,o)),i=0,l=o>0?s-4:s;for(n=0;n<l;n+=4)t=An[e.charCodeAt(n)]<<18|An[e.charCodeAt(n+1)]<<12|An[e.charCodeAt(n+2)]<<6|An[e.charCodeAt(n+3)],a[i++]=t>>16&255,a[i++]=t>>8&255,a[i++]=255&t;2===o&&(t=An[e.charCodeAt(n)]<<2|An[e.charCodeAt(n+1)]>>4,a[i++]=255&t);1===o&&(t=An[e.charCodeAt(n)]<<10|An[e.charCodeAt(n+1)]<<4|An[e.charCodeAt(n+2)]>>2,a[i++]=t>>8&255,a[i++]=255&t);return a},xn=function(e){for(var t,n=e.length,r=n%3,s=[],o=16383,a=0,i=n-r;a<i;a+=o)s.push(_n(e,a,a+o>i?i:a+o));1===r?(t=e[n-1],s.push(Nn[t>>2]+Nn[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],s.push(Nn[t>>10]+Nn[t>>4&63]+Nn[t<<2&63]+"="));return s.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var En,Tn,Nn=[],An=[],Mn="undefined"!=typeof Uint8Array?Uint8Array:Array,Fn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Dn=0,Rn=Fn.length;Dn<Rn;++Dn)Nn[Dn]=Fn[Dn],An[Fn.charCodeAt(Dn)]=Dn;function $n(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function _n(e,t,n){for(var r,s,o=[],a=t;a<n;a+=3)r=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),o.push(Nn[(s=r)>>18&63]+Nn[s>>12&63]+Nn[s>>6&63]+Nn[63&s]);return o.join("")}An["-".charCodeAt(0)]=62,An["_".charCodeAt(0)]=63,En=function(e,t,n,r,s){var o,a,i=8*s-r-1,l=(1<<i)-1,u=l>>1,c=-7,h=n?s-1:0,d=n?-1:1,p=e[t+h];for(h+=d,o=p&(1<<-c)-1,p>>=-c,c+=i;c>0;o=256*o+e[t+h],h+=d,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=r;c>0;a=256*a+e[t+h],h+=d,c-=8);if(0===o)o=1-u;else{if(o===l)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),o-=u}return(p?-1:1)*a*Math.pow(2,o-r)},Tn=function(e,t,n,r,s,o){var a,i,l,u=8*o-s-1,c=(1<<u)-1,h=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,f=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),(t+=a+h>=1?d/l:d*Math.pow(2,1-h))*l>=2&&(a++,l/=2),a+h>=c?(i=0,a=c):a+h>=1?(i=(t*l-1)*Math.pow(2,s),a+=h):(i=t*Math.pow(2,h-1)*Math.pow(2,s),a=0));s>=8;e[n+p]=255&i,p+=f,i/=256,s-=8);for(a=a<<s|i,u+=s;u>0;e[n+p]=255&a,p+=f,a/=256,u-=8);e[n+p-f]|=128*g};const Bn="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;Sn=Pn;function On(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,Pn.prototype),t}function Pn(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return Ln(e)}return zn(e,t,n)}function zn(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!Pn.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|Vn(e,t);let r=On(n);const s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(vr(e,Uint8Array)){const t=new Uint8Array(e);return Un(t.buffer,t.byteOffset,t.byteLength)}return Wn(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(vr(e,ArrayBuffer)||e&&vr(e.buffer,ArrayBuffer))return Un(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(vr(e,SharedArrayBuffer)||e&&vr(e.buffer,SharedArrayBuffer)))return Un(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return Pn.from(r,t,n);const s=function(e){if(Pn.isBuffer(e)){const t=0|Hn(e.length),n=On(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||xr(e.length)?On(0):Wn(e);if("Buffer"===e.type&&Array.isArray(e.data))return Wn(e.data)}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return Pn.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function Cn(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function Ln(e){return Cn(e),On(e<0?0:0|Hn(e))}function Wn(e){const t=e.length<0?0:0|Hn(e.length),n=On(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function Un(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,Pn.prototype),r}function Hn(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function Vn(e,t){if(Pn.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||vr(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return wr(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Ir(e).length;default:if(s)return r?-1:wr(e).length;t=(""+t).toLowerCase(),s=!0}}function qn(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return sr(this,t,n);case"utf8":case"utf-8":return tr(this,t,n);case"ascii":return nr(this,t,n);case"latin1":case"binary":return rr(this,t,n);case"base64":return er(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return or(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Gn(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Kn(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),xr(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=Pn.from(t,r)),Pn.isBuffer(t))return 0===t.length?-1:jn(e,t,n,r,s);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):jn(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function jn(e,t,n,r,s){let o,a=1,i=e.length,l=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,i/=2,l/=2,n/=2}function u(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(s){let r=-1;for(o=n;o<i;o++)if(u(e,o)===u(t,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===l)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+l>i&&(n=i-l),o=n;o>=0;o--){let n=!0;for(let r=0;r<l;r++)if(u(e,o+r)!==u(t,r)){n=!1;break}if(n)return o}return-1}function Zn(e,t,n,r){n=Number(n)||0;const s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;const o=t.length;let a;for(r>o/2&&(r=o/2),a=0;a<r;++a){const r=parseInt(t.substr(2*a,2),16);if(xr(r))return a;e[n+a]=r}return a}function Yn(e,t,n,r){return Sr(wr(t,e.length-n),e,n,r)}function Jn(e,t,n,r){return Sr(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Xn(e,t,n,r){return Sr(Ir(t),e,n,r)}function Qn(e,t,n,r){return Sr(function(e,t){let n,r,s;const o=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,s=n%256,o.push(s),o.push(r);return o}(t,e.length-n),e,n,r)}function er(e,t,n){return 0===t&&n===e.length?xn(e):xn(e.slice(t,n))}function tr(e,t,n){n=Math.min(e.length,n);const r=[];let s=t;for(;s<n;){const t=e[s];let o=null,a=t>239?4:t>223?3:t>191?2:1;if(s+a<=n){let n,r,i,l;switch(a){case 1:t<128&&(o=t);break;case 2:n=e[s+1],128==(192&n)&&(l=(31&t)<<6|63&n,l>127&&(o=l));break;case 3:n=e[s+1],r=e[s+2],128==(192&n)&&128==(192&r)&&(l=(15&t)<<12|(63&n)<<6|63&r,l>2047&&(l<55296||l>57343)&&(o=l));break;case 4:n=e[s+1],r=e[s+2],i=e[s+3],128==(192&n)&&128==(192&r)&&128==(192&i)&&(l=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&i,l>65535&&l<1114112&&(o=l))}}null===o?(o=65533,a=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),s+=a}return function(e){const t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}Pn.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),Pn.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Pn.prototype,"parent",{enumerable:!0,get:function(){if(Pn.isBuffer(this))return this.buffer}}),Object.defineProperty(Pn.prototype,"offset",{enumerable:!0,get:function(){if(Pn.isBuffer(this))return this.byteOffset}}),Pn.poolSize=8192,Pn.from=function(e,t,n){return zn(e,t,n)},Object.setPrototypeOf(Pn.prototype,Uint8Array.prototype),Object.setPrototypeOf(Pn,Uint8Array),Pn.alloc=function(e,t,n){return function(e,t,n){return Cn(e),e<=0?On(e):void 0!==t?"string"==typeof n?On(e).fill(t,n):On(e).fill(t):On(e)}(e,t,n)},Pn.allocUnsafe=function(e){return Ln(e)},Pn.allocUnsafeSlow=function(e){return Ln(e)},Pn.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==Pn.prototype},Pn.compare=function(e,t){if(vr(e,Uint8Array)&&(e=Pn.from(e,e.offset,e.byteLength)),vr(t,Uint8Array)&&(t=Pn.from(t,t.offset,t.byteLength)),!Pn.isBuffer(e)||!Pn.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let s=0,o=Math.min(n,r);s<o;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},Pn.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Pn.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Pn.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=Pn.allocUnsafe(t);let s=0;for(n=0;n<e.length;++n){let t=e[n];if(vr(t,Uint8Array))s+t.length>r.length?(Pn.isBuffer(t)||(t=Pn.from(t)),t.copy(r,s)):Uint8Array.prototype.set.call(r,t,s);else{if(!Pn.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,s)}s+=t.length}return r},Pn.byteLength=Vn,Pn.prototype._isBuffer=!0,Pn.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)Gn(this,t,t+1);return this},Pn.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)Gn(this,t,t+3),Gn(this,t+1,t+2);return this},Pn.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)Gn(this,t,t+7),Gn(this,t+1,t+6),Gn(this,t+2,t+5),Gn(this,t+3,t+4);return this},Pn.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?tr(this,0,e):qn.apply(this,arguments)},Pn.prototype.toLocaleString=Pn.prototype.toString,Pn.prototype.equals=function(e){if(!Pn.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Pn.compare(this,e)},Pn.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},Bn&&(Pn.prototype[Bn]=Pn.prototype.inspect),Pn.prototype.compare=function(e,t,n,r,s){if(vr(e,Uint8Array)&&(e=Pn.from(e,e.offset,e.byteLength)),!Pn.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;let o=(s>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0);const i=Math.min(o,a),l=this.slice(r,s),u=e.slice(t,n);for(let e=0;e<i;++e)if(l[e]!==u[e]){o=l[e],a=u[e];break}return o<a?-1:a<o?1:0},Pn.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},Pn.prototype.indexOf=function(e,t,n){return Kn(this,e,t,n,!0)},Pn.prototype.lastIndexOf=function(e,t,n){return Kn(this,e,t,n,!1)},Pn.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let o=!1;for(;;)switch(r){case"hex":return Zn(this,e,t,n);case"utf8":case"utf-8":return Yn(this,e,t,n);case"ascii":case"latin1":case"binary":return Jn(this,e,t,n);case"base64":return Xn(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Qn(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},Pn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function nr(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function rr(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function sr(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let s="";for(let r=t;r<n;++r)s+=Er[e[r]];return s}function or(e,t,n){const r=e.slice(t,n);let s="";for(let e=0;e<r.length-1;e+=2)s+=String.fromCharCode(r[e]+256*r[e+1]);return s}function ar(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function ir(e,t,n,r,s,o){if(!Pn.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function lr(e,t,n,r,s){mr(t,r,s,e,n,7);let o=Number(t&BigInt(4294967295));e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,n}function ur(e,t,n,r,s){mr(t,r,s,e,n,7);let o=Number(t&BigInt(4294967295));e[n+7]=o,o>>=8,e[n+6]=o,o>>=8,e[n+5]=o,o>>=8,e[n+4]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=a,a>>=8,e[n+2]=a,a>>=8,e[n+1]=a,a>>=8,e[n]=a,n+8}function cr(e,t,n,r,s,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function hr(e,t,n,r,s){return t=+t,n>>>=0,s||cr(e,0,n,4),Tn(e,t,n,r,23,4),n+4}function dr(e,t,n,r,s){return t=+t,n>>>=0,s||cr(e,0,n,8),Tn(e,t,n,r,52,8),n+8}Pn.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,Pn.prototype),r},Pn.prototype.readUintLE=Pn.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e],s=1,o=0;for(;++o<t&&(s*=256);)r+=this[e+o]*s;return r},Pn.prototype.readUintBE=Pn.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e+--t],s=1;for(;t>0&&(s*=256);)r+=this[e+--t]*s;return r},Pn.prototype.readUint8=Pn.prototype.readUInt8=function(e,t){return e>>>=0,t||ar(e,1,this.length),this[e]},Pn.prototype.readUint16LE=Pn.prototype.readUInt16LE=function(e,t){return e>>>=0,t||ar(e,2,this.length),this[e]|this[e+1]<<8},Pn.prototype.readUint16BE=Pn.prototype.readUInt16BE=function(e,t){return e>>>=0,t||ar(e,2,this.length),this[e]<<8|this[e+1]},Pn.prototype.readUint32LE=Pn.prototype.readUInt32LE=function(e,t){return e>>>=0,t||ar(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Pn.prototype.readUint32BE=Pn.prototype.readUInt32BE=function(e,t){return e>>>=0,t||ar(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Pn.prototype.readBigUInt64LE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||br(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(s)<<BigInt(32))})),Pn.prototype.readBigUInt64BE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||br(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(s)})),Pn.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e],s=1,o=0;for(;++o<t&&(s*=256);)r+=this[e+o]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*t)),r},Pn.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=t,s=1,o=this[e+--r];for(;r>0&&(s*=256);)o+=this[e+--r]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*t)),o},Pn.prototype.readInt8=function(e,t){return e>>>=0,t||ar(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Pn.prototype.readInt16LE=function(e,t){e>>>=0,t||ar(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt16BE=function(e,t){e>>>=0,t||ar(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt32LE=function(e,t){return e>>>=0,t||ar(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Pn.prototype.readInt32BE=function(e,t){return e>>>=0,t||ar(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Pn.prototype.readBigInt64LE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||br(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),Pn.prototype.readBigInt64BE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||br(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),Pn.prototype.readFloatLE=function(e,t){return e>>>=0,t||ar(e,4,this.length),En(this,e,!0,23,4)},Pn.prototype.readFloatBE=function(e,t){return e>>>=0,t||ar(e,4,this.length),En(this,e,!1,23,4)},Pn.prototype.readDoubleLE=function(e,t){return e>>>=0,t||ar(e,8,this.length),En(this,e,!0,52,8)},Pn.prototype.readDoubleBE=function(e,t){return e>>>=0,t||ar(e,8,this.length),En(this,e,!1,52,8)},Pn.prototype.writeUintLE=Pn.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){ir(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=1,o=0;for(this[t]=255&e;++o<n&&(s*=256);)this[t+o]=e/s&255;return t+n},Pn.prototype.writeUintBE=Pn.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){ir(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=n-1,o=1;for(this[t+s]=255&e;--s>=0&&(o*=256);)this[t+s]=e/o&255;return t+n},Pn.prototype.writeUint8=Pn.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,1,255,0),this[t]=255&e,t+1},Pn.prototype.writeUint16LE=Pn.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},Pn.prototype.writeUint16BE=Pn.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},Pn.prototype.writeUint32LE=Pn.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},Pn.prototype.writeUint32BE=Pn.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Pn.prototype.writeBigUInt64LE=Tr((function(e,t=0){return lr(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Pn.prototype.writeBigUInt64BE=Tr((function(e,t=0){return ur(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Pn.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let s=0,o=1,a=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===a&&0!==this[t+s-1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},Pn.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let s=n-1,o=1,a=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===a&&0!==this[t+s+1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},Pn.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},Pn.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},Pn.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},Pn.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},Pn.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Pn.prototype.writeBigInt64LE=Tr((function(e,t=0){return lr(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Pn.prototype.writeBigInt64BE=Tr((function(e,t=0){return ur(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Pn.prototype.writeFloatLE=function(e,t,n){return hr(this,e,t,!0,n)},Pn.prototype.writeFloatBE=function(e,t,n){return hr(this,e,t,!1,n)},Pn.prototype.writeDoubleLE=function(e,t,n){return dr(this,e,t,!0,n)},Pn.prototype.writeDoubleBE=function(e,t,n){return dr(this,e,t,!1,n)},Pn.prototype.copy=function(e,t,n,r){if(!Pn.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const s=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},Pn.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Pn.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{const o=Pn.isBuffer(e)?e:Pn.from(e,r),a=o.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=o[s%a]}return this};const pr={};function fr(e,t,n){pr[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function gr(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function mr(e,t,n,r,s,o){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let s;throw s=o>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(o+1)}${r}`:`>= -(2${r} ** ${8*(o+1)-1}${r}) and < 2 ** ${8*(o+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new pr.ERR_OUT_OF_RANGE("value",s,e)}!function(e,t,n){yr(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||br(t,e.length-(n+1))}(r,s,o)}function yr(e,t){if("number"!=typeof e)throw new pr.ERR_INVALID_ARG_TYPE(t,"number",e)}function br(e,t,n){if(Math.floor(e)!==e)throw yr(e,n),new pr.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new pr.ERR_BUFFER_OUT_OF_BOUNDS;throw new pr.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}fr("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),fr("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),fr("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>2**32?s=gr(String(n)):"bigint"==typeof n&&(s=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(s=gr(s)),s+="n"),r+=` It must be ${t}. Received ${s}`,r}),RangeError);const kr=/[^+/0-9A-Za-z-_]/g;function wr(e,t){let n;t=t||1/0;const r=e.length;let s=null;const o=[];for(let a=0;a<r;++a){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&o.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function Ir(e){return vn(function(e){if((e=(e=e.split("=")[0]).trim().replace(kr,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Sr(e,t,n,r){let s;for(s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function vr(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function xr(e){return e!=e}const Er=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let s=0;s<16;++s)t[r+s]=e[n]+e[s]}return t}();function Tr(e){return"undefined"==typeof BigInt?Nr:e}function Nr(){throw new Error("BigInt not supported")}var Ar=Sn;const Mr=void 0!==Ar&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Fr(e){return Mr?Ar.byteLength(e):new Blob([e]).size}function Dr(e){if(Mr)return Ar.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function Rr(e){if(Mr){const t=Ar.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function $r(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function _r(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Br(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Or(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Fr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Fr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Pr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Pr.instance&&(Pr.instance=new Pr),Pr.instance}static registerSaveRouter(e){Pr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pr.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Pr.getInstance().loadRouters:Pr.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}function zr(){if(!ae().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Cr(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Lr{constructor(e){if(this.indexedDB=zr(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Cr(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Or(t),o=s.transaction("model_info_store","readwrite");let a=o.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;i.onsuccess=()=>{l=s.transaction("models_store","readwrite");const i=l.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=o.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Lr.URL_SCHEME="indexeddb://";const Wr=e=>{return ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Lr.URL_SCHEME)?(t=e.slice(Lr.URL_SCHEME.length),new Lr(t)):null;var t};Pr.registerSaveRouter(Wr),Pr.registerLoadRouter(Wr);class Ur{constructor(){this.indexedDB=zr()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Cr(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),o=s.objectStore("model_info_store").getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Lr.URL_SCHEME)?t.slice(Lr.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Cr(r),r.onsuccess=()=>{const s=r.result,o=s.transaction("model_info_store","readwrite"),a=o.objectStore("model_info_store"),i=a.get(e);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),o=()=>{l=s.transaction("models_store","readwrite");const r=l.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Hr="tensorflowjs_models",Vr="info",qr="model_topology",Gr="weight_specs",Kr="weight_data",jr="model_metadata";function Zr(e){return{info:[Hr,e,Vr].join("/"),topology:[Hr,e,qr].join("/"),weightSpecs:[Hr,e,Gr].join("/"),weightData:[Hr,e,Kr].join("/"),modelMetadata:[Hr,e,jr].join("/")}}function Yr(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Jr(e){const t=e.split("/");if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}class Xr{constructor(e){if(!ae().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Zr(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Or(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Dr(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw Yr(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Rr(o),t}}Xr.URL_SCHEME="localstorage://";const Qr=e=>{return ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xr.URL_SCHEME)?(t=e.slice(Xr.URL_SCHEME.length),new Xr(t)):null;var t};Pr.registerSaveRouter(Qr),Pr.registerLoadRouter(Qr);class es{constructor(){b(ae().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),b("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Hr+"/",n="/"+Vr;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Jr(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Zr(e=(t=e).startsWith(Xr.URL_SCHEME)?t.slice(Xr.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Yr(n),r}}class ts{constructor(){this.managers={}}static getInstance(){return null==ts.instance&&(ts.instance=new ts),ts.instance}static registerManager(e,t){b(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),b(e.length>0,(()=>"scheme must not be an empty string."));const n=ts.getInstance();b(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ts.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ts.getInstance().managers)}}class ns{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ae().get("IS_BROWSER")){ae().setPlatform("browser",new ns);try{ts.registerManager(Xr.URL_SCHEME,new es)}catch(e){}try{ts.registerManager(Lr.URL_SCHEME,new Ur)}catch(e){}}const rs=()=>o("kjyEk");let ss;function os(e,t="float32",n){return t=t||"float32",ee(e),new zt(e,t,n)}ae().get("IS_NODE")&&!ae().get("IS_BROWSER")&&ae().setPlatform("node",new class{constructor(){this.util=o("kjyEk"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ae().global.fetch?ae().global.fetch(e,t):(null==ss&&(ss=rs()),ss(e,t))}now(){const e=ce.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const as=bn({cast_:function(e,t){const n=mn(e,"x","cast");if(!P(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return cn.runKernel("Cast",r,s)}});const is=bn({clone_:function(e){const t={x:mn(e,"x","clone","string_or_numeric")};return cn.runKernel("Identity",t)}});un();Lt={buffer:os,cast:as,clone:is,print:function(e,t=!1){console.log(e.toString(t))}};function ls(e){return new Promise((e=>setTimeout(e))).then(e)}class us{constructor(e){if(!ae().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(us.URL_SCHEME)&&(e=e.slice(us.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=_r(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await ls((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ls((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Or(e)}}}}us.URL_SCHEME="downloads://";function cs(e,t,n,r){!function(e){b(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){b(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),b(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),b(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((o=>(o.then((o=>{const a=n+ ++s/e.length*(r-n);return t(a),o})),o))))}async function hs(e,t){null==t&&(t={});const n=null==t.fetchFunc?ae().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await cs(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await cs(s,t.onProgress,.5,1)}Pr.registerSaveRouter((e=>ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(us.URL_SCHEME)?function(e="model"){return new us(e)}(e.slice(us.URL_SCHEME.length)):null));class ds{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(b("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ae().platform.fetch,b(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&b(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=_r(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Or(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Br(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,o=[];for(const t of e)o.push(...t.weights);const a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(i));return[o,$r(await hs(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ps(e){return null!=e.match(ds.URL_SCHEME_REGEX)}ds.URL_SCHEME_REGEX=/^https?:\/\//;const fs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ps(e))):ps(e),n)return gs(e,t)}return null};function gs(e,t){return new ds(e,t)}Pr.registerSaveRouter(fs),Pr.registerLoadRouter(fs);var ms={};function ys(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=e[o]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(o)}return r}function bs(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],o=t.length-r-1,a=t[o];(null==s||1===s&&a>1)&&n.unshift(o)}return n}function ks(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}t(ms,"getBroadcastDims",(()=>ys)),t(ms,"getReductionAxes",(()=>bs)),t(ms,"assertAndGetBroadcastShape",(()=>ks));var ws={};t(ws,"assertParamsValid",(()=>Is)),t(ws,"maskToAxes",(()=>Ss)),t(ws,"computeOutShape",(()=>vs)),t(ws,"stridesWithElidedDims",(()=>xs)),t(ws,"getNormalizedAxes",(()=>Ns)),t(ws,"startIndicesWithElidedDims",(()=>As)),t(ws,"stopIndicesWithElidedDims",(()=>Ms)),t(ws,"startForAxis",(()=>Ds)),t(ws,"stopForAxis",(()=>Rs)),t(ws,"stridesForAxis",(()=>Fs)),t(ws,"isSliceContinous",(()=>$s)),t(ws,"computeFlatOffset",(()=>_s)),t(ws,"parseSliceParams",(()=>Bs)),t(ws,"sliceInfo",(()=>Os));function Is(e,t,n){const r=e.shape.length;b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)b(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ss(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function vs(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function xs(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Es(e,t,n){return n<=e?n:n-(t-1)}function Ts(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ns(e,t,n,r,s,o,a,i,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=As(a,l,u,r,e),h=Ms(i,l,u,s,e),d=xs(o,l,u,e)}else for(let t=0;t<u;t++)c[t]=Ds(a,r,o,e,t,l),h[t]=Rs(i,s,o,e,t,l),d[t]=Fs(o,t,l);return{begin:c,end:h,strides:d}}function As(e,t,n,r,s){const o=[...s],a=Ts(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=0;else{const a=Es(t,n,s);let i=r[a];e&1<<a&&(i=0),o[s]=i}return o}function Ms(e,t,n,r,s){const o=[...s],a=Ts(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=Number.MAX_SAFE_INTEGER;else{const a=Es(t,n,s);let i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),o[s]=i}for(let e=0;e<o.length;e++){const t=s[e];o[e]<0&&(o[e]+=t),o[e]=d(0,o[e],s[e])}return o}function Fs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ds(e,t,n,r,s,o){let a=t[s];const i=n[s]||1;(e&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=d(0,a,l-1),a}function Rs(e,t,n,r,s,o){let a=t[s];const i=n[s]||1;(e&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=i>0?d(0,a,l):d(-1,a,l-1),a}function $s(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function _s(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Bs(e,t,n){let r;const s=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,o]}function Os(e,t,n,r,s,o,a,i,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&i)&&h.numAddAxisAfterEllipsis++,1<<e&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){m.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],o=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const a=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Ps(d.begin[t],0,d.strides[t],r,s,o),d.end[t]=Ps(d.end[t],1,d.strides[t],r,s,o);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&a,f=f&&(0===t&&1===d.strides[t]||a);let i,l=!1;if(d.beginValid&&d.endValid?(i=d.end[t]-d.begin[t],l=!0):n?(i=1,l=!0):a&&r>=0&&(i=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===i||i<0!=d.strides[t]<0?0:Math.trunc(i/d.strides[t])+(i%d.strides[t]!=0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(m[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Ps(e,t,n,r,s,o){if(s[t])return n>0?o[t]:o[t+1&1];{const t=e<0?r+e:e;return t<o[0]?o[0]:t>o[1]?o[1]:t}}var zs={};t(zs,"fromUint8ToStringArray",(()=>Ga)),t(zs,"fromStringArrayToUint8",(()=>Ka)),t(zs,"slice_util",(()=>ws)),t(zs,"upcastType",(()=>tn)),t(zs,"segment_util",(()=>Cs));var Cs={};t(Cs,"segOpComputeOptimalWindowSize",(()=>Hs)),t(Cs,"computeOutShape",(()=>Vs)),t(Cs,"collectGatherOpShapeInfo",(()=>qs));var Ls={};t(Ls,"PARALLELIZE_THRESHOLD",(()=>Ws)),t(Ls,"computeOptimalWindowSize",(()=>Us));const Ws=30;function Us(e){return e<=Ws?e:K(e,Math.floor(Math.sqrt(e)))}function Hs(e,t){let n,r=!1;for(e<=Ws?(n=e,r=!0):n=K(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=K(e,n+1);return n}function Vs(e,t,n){const r=[],s=e.length;for(let o=0;o<s;o++)o!==t?r.push(e[o]):r.push(n);return r}function qs(e,t,n,r){const s=t.shape.length,o=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],i=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<o;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:i}}var Gs={};function Ks(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function js(e,t,n){const r=e.length+t.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[o++]):s.push(t[a++]);return s}function Zs(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Ys(e,t){return js(e,t.map((e=>1)),t)}function Js(e,t,n){b(Ks(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xs(e,t){if(Ks(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Qs(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function eo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}t(Gs,"axesAreInnerMostDims",(()=>Ks)),t(Gs,"combineLocations",(()=>js)),t(Gs,"computeOutAndReduceShapes",(()=>Zs)),t(Gs,"expandShapeToKeepDim",(()=>Ys)),t(Gs,"assertAxesAreInnerMostDims",(()=>Js)),t(Gs,"getAxesPermutation",(()=>Xs)),t(Gs,"getUndoAxesPermutation",(()=>Qs)),t(Gs,"getInnerMostAxes",(()=>eo));var to={};function no(e,t){const n=e[0].length;e.forEach(((e,t)=>{b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let o=0;o<n;o++)b(o===t||e[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function ro(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}t(to,"assertParamsConsistent",(()=>no)),t(to,"computeOutShape",(()=>ro));var so={};function oo(e,t,n,r,s="NHWC",o){return lo(e,[...t,e[3]],n,o,r,null,null,bo(s))}function ao(e,t,n,r,s,o,a="channelsLast"){const[i,l]=ho(t);let u;if("channelsLast"===a)u=[i,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[i,l,e[1],e[1]]}return lo(e,u,n,r,s,o,!1,a)}function io(e,t,n,r,s,o,a="NDHWC"){const[i,l,u]=po(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[i,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[i,l,u,e[1],e[1]]}return uo(e,c,n,r,s,!1,h,o)}function lo(e,t,n,r,s,o,a=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=ho(n),[y,b]=ho(r),k=fo(d,y),w=fo(p,b),{padInfo:I,outHeight:S,outWidth:v}=function(e,t,n,r,s,o,a,i,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=co(e,t,n));const o=e[0],a=e[1],i=go((o-t+2*r)/n+1,s),l=go((a-t+2*r)/n+1,s);return[i,l]}([t,n],o,r,e,i);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+o-t),i=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(i/2);u={top:l,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-o+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=go((t-o+d+p)/r+1,i),h=go((n-a+f+g)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,k,w,o,i),x=a?f*h:f;let E;return"channelsFirst"===i?E=[l,x,S,v]:"channelsLast"===i&&(E=[l,S,v,x]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:v,outChannels:x,padInfo:I,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:k,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:E,filterShape:t}}function uo(e,t,n,r,s,o=!1,a="channelsLast",i){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[y,b,k]=po(n),[w,I,S]=po(r),v=fo(p,w),x=fo(f,I),E=fo(g,S),{padInfo:T,outDepth:N,outHeight:A,outWidth:M}=function(e,t,n,r,s,o,a,i,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,s,o){null==s&&(s=co(e,t,r));const a=e[0],i=e[1],l=e[2],u=go((a-t+2*s)/r+1,o),c=go((i-t+2*s)/r+1,o),h=go((l-t+2*s)/r+1,o);return[u,c,h,n]}([t,n,r,1],i,1,s,e,c);d=o[0],p=o[1],f=o[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/o),f=Math.ceil(r/a);const e=(d-1)*s+i-t,c=(p-1)*o+l-n,g=(f-1)*a+u-r,m=Math.floor(e/2),y=e-m,b=Math.floor(c/2),k=c-b,w=Math.floor(g/2);h={top:b,bottom:k,left:w,right:g-w,front:m,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/s),p=Math.ceil((n-l+1)/o),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,y,b,k,v,x,E,i),F=o?m*d:m;let D;return"channelsFirst"===a?D=[l,F,N,A,M]:"channelsLast"===a&&(D=[l,N,A,M,F]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:A,outWidth:M,outChannels:F,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:k,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:v,effectiveFilterHeight:x,effectiveFilterWidth:E,dilationDepth:w,dilationHeight:I,dilationWidth:S,inShape:e,outShape:D,filterShape:t}}function co(e,t,n,r=1){const s=fo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ho(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function po(e){return"number"==typeof e?[e,e,e]:e}function fo(e,t){return t<=1?e:e+(e-1)*(t-1)}function go(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function mo(e){const[t,n,r]=ho(e);return 1===t&&1===n&&1===r}function yo(e,t){return mo(e)||mo(t)}function bo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ko(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)b(E(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{b(E(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}t(so,"computeDilation2DInfo",(()=>oo)),t(so,"convertConv2DDataFormat",(()=>bo)),t(so,"computeConv2DInfo",(()=>lo)),t(so,"computePool2DInfo",(()=>ao)),t(so,"computePool3DInfo",(()=>io)),t(so,"computeConv3DInfo",(()=>uo)),t(so,"computeDefaultPad",(()=>co)),t(so,"tupleValuesAreOne",(()=>mo)),t(so,"eitherStridesOrDilationsAreOne",(()=>yo)),t(so,"checkPadOnDimRoundingMode",(()=>ko));var wo={};t(wo,"getFusedDyActivation",(()=>Do)),t(wo,"getFusedBiasGradient",(()=>Ro)),t(wo,"applyActivation",(()=>$o)),t(wo,"shouldFuse",(()=>_o));const Io=bn({elu_:function(e){const t={x:mn(e,"x","elu","float32")};return cn.runKernel("Elu",t)}});const So=bn({leakyRelu_:function(e,t=.2){const n={x:mn(e,"x","leakyRelu")},r={alpha:t};return cn.runKernel("LeakyRelu",n,r)}});const vo=bn({mul_:function(e,t){let n=mn(e,"a","mul"),r=mn(t,"b","mul");[n,r]=nn(n,r);const s={a:n,b:r};return cn.runKernel("Multiply",s)}});const xo=bn({prelu_:function(e,t){const n={x:mn(e,"x","prelu"),alpha:mn(t,"alpha","prelu")};return cn.runKernel("Prelu",n)}});const Eo=bn({relu_:function(e){const t={x:mn(e,"x","relu")};return cn.runKernel("Relu",t)}});const To=bn({relu6_:function(e){const t={x:mn(e,"x","relu6")};return cn.runKernel("Relu6",t)}});const No=bn({reshape_:function(e,t){const n={x:mn(e,"x","reshape","string_or_numeric")},r={shape:t};return cn.runKernel("Reshape",n,r)}});const Ao=bn({sigmoid_:function(e){const t={x:mn(e,"x","sigmoid","float32")};return cn.runKernel("Sigmoid",t)}});const Mo=bn({step_:function(e,t=0){const n={x:mn(e,"x","step")},r={alpha:t};return cn.runKernel("Step",n,r)}});const Fo=bn({sum_:function(e,t=null,n=!1){let r=mn(e,"x","sum");"bool"===r.dtype&&(r=as(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return cn.runKernel("Sum",s,o)}});function Do(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return vo(e,Mo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ro(e,t){let n=t;const r=bs(e.shape,t.shape);return r.length>0&&(n=Fo(n,r)),No(n,e.shape)}function $o(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Eo(e);if("elu"===t)return Io(e);if("relu6"===t)return To(e);if("prelu"===t)return xo(e,n);if("leakyrelu"===t)return So(e,r);if("sigmoid"===t)return Ao(e);throw new Error(`Unknown fused activation ${t}.`)}const _o=(e,t)=>!(e>0)||"linear"===t;var Bo,Oo,Po={};function zo(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const o=n[s],a=r[r.length-n.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${o} but shape[${s+e}] = ${i}`)}else r[a]=o}return r}function Co(e){const t={FIRST_DIM_SIZE:Bo.FIRST_DIM_SIZE,VALUE_ROWIDS:Bo.VALUE_ROWIDS,ROW_LENGTHS:Bo.ROW_LENGTHS,ROW_SPLITS:Bo.ROW_SPLITS,ROW_LIMITS:Bo.ROW_LIMITS,ROW_STARTS:Bo.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Lo(e){return 0===e.length?0:e[0]===Bo.FIRST_DIM_SIZE?e.length-1:e.length}function Wo(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}t(Po,"RowPartitionType",(()=>Bo)),t(Po,"combineRaggedTensorToTensorShapes",(()=>zo)),t(Po,"getRowPartitionTypesHelper",(()=>Co)),t(Po,"getRaggedRank",(()=>Lo)),t(Po,"validateDefaultValueShape",(()=>Wo)),(Oo=Bo||(Bo={}))[Oo.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",Oo[Oo.VALUE_ROWIDS=1]="VALUE_ROWIDS",Oo[Oo.ROW_LENGTHS=2]="ROW_LENGTHS",Oo[Oo.ROW_SPLITS=3]="ROW_SPLITS",Oo[Oo.ROW_LIMITS=4]="ROW_LIMITS",Oo[Oo.ROW_STARTS=5]="ROW_STARTS";var Uo={};function Ho(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}t(Uo,"getImageCenter",(()=>Ho));var Vo={};function qo(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Go(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ko(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function jo(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Zo(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}t(Vo,"getReshaped",(()=>qo)),t(Vo,"getPermuted",(()=>Go)),t(Vo,"getReshapedPermuted",(()=>Ko)),t(Vo,"getSliceBeginCoords",(()=>jo)),t(Vo,"getSliceSize",(()=>Zo));var Yo={};function Jo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===S(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,o=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const i=e.shape,l=s.slice();l.pop();let u=1;for(let e=o;e<n;++e)u*=i[e],l.push(i[e]);const c=[...j(e.shape).map((e=>e/u)),1].slice(0,o);return[l,a,u,c]}t(Yo,"prepareAndValidate",(()=>Jo));var Xo={};function Qo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(o+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(o+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(o+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function ea(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Qo(n,t,e)}function ta(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let a=1;for(let e=s;e<o;++e)a*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:S(t.shape)/i,sliceSize:a,strides:[...j(n.slice(0,s)),1],outputSize:S(n)}}t(Xo,"validateUpdateShape",(()=>Qo)),t(Xo,"validateInput",(()=>ea)),t(Xo,"calculateShapes",(()=>ta));var na={};t(na,"SELU_SCALEALPHA",(()=>ra)),t(na,"SELU_SCALE",(()=>sa));const ra=1.7580993408473768,sa=1.0507009873554805;var oa={};t(oa,"ERF_P",(()=>aa)),t(oa,"ERF_A1",(()=>ia)),t(oa,"ERF_A2",(()=>la)),t(oa,"ERF_A3",(()=>ua)),t(oa,"ERF_A4",(()=>ca)),t(oa,"ERF_A5",(()=>ha));const aa=.3275911,ia=.254829592,la=-.284496736,ua=1.421413741,ca=-1.453152027,ha=1.061405429;var da={};function pa(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function fa(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ga(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ma(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ya(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ba(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ka(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const o=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function wa(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}t(da,"mergeRealAndImagArrays",(()=>pa)),t(da,"splitRealAndImagArrays",(()=>fa)),t(da,"complexWithEvenIndex",(()=>ga)),t(da,"complexWithOddIndex",(()=>ma)),t(da,"getComplexWithIndex",(()=>ya)),t(da,"assignToTypedArray",(()=>ba)),t(da,"exponents",(()=>ka)),t(da,"exponent",(()=>wa));var Ia={};t(Ia,"decodeEinsumEquation",(()=>va)),t(Ia,"getEinsumPermutation",(()=>xa)),t(Ia,"checkEinsumDimSizes",(()=>Ea)),t(Ia,"getEinsumComputePath",(()=>Ta)),t(Ia,"isIdentityPermutation",(()=>Na));const Sa=/->/g;function va(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Sa,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");b(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const o=r.split(","),a=o.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<s.length;++e){const t=s[e];if(!o.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&","!==t&&i.push(t)}const l=new Array(o.length);for(let e=0;e<a;++e){if(new Set(o[e].split("")).size!==o[e].length)throw new Error(`Found duplicate axes in input component ${o[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<o[e].length;++t)l[e].push(i.indexOf(o[e][t]))}const u=i.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:i,summedDims:c,idDims:l}}function xa(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Ea(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:b(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Ta(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const o=[];for(let e=0;e<n.length;++e){const s=Aa(t,n[e]);for(const t of s)-1===o.indexOf(t)&&(r[e].push(t),o.push(t))}return{path:n,steps:r}}function Na(e){return e.every(((e,t)=>e===t))}function Aa(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var Ma={};function Fa(e,t,n=0){let r=[];if("number"==typeof t)b(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{b(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}b(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}t(Ma,"prepareSplitSize",(()=>Fa));var Da={};function Ra(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function $a(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function _a(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}t(Da,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(()=>Ra)),t(Da,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(()=>$a)),t(Da,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(()=>_a));var Ba={};function Oa(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Pa(e,t){return`size ${e} must be non-negative, not ${t}`}function za(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Ca(e,t){return`Input to reshape is a SparseTensor with ${S(e)}\n  dense values, but the requested shape requires a multiple of ${S(t)}. inputShape=${e} outputShape= ${t}`}function La(e,t){return`Input to reshape is a tensor with ${S(e)} dense values, but the requested shape has ${S(t)}. inputShape=${e} outputShape=${t}`}t(Ba,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(()=>Oa)),t(Ba,"getSparseReshapeNegativeOutputDimErrorMessage",(()=>Pa)),t(Ba,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(()=>za)),t(Ba,"getSparseReshapeInputOutputMultipleErrorMessage",(()=>Ca)),t(Ba,"getSparseReshapeInputOutputMismatchErrorMessage",(()=>La));var Wa={};function Ua(){return"segment ids must be >= 0"}function Ha(){return"segment ids are not increasing"}function Va(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function qa(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Ga(e){try{return e.map((e=>Nt(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ka(e){return e.map((e=>Tt(e)))}t(Wa,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(()=>Ua)),t(Wa,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(()=>Ha)),t(Wa,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(()=>Va)),t(Wa,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(()=>qa)),n(zs,Gs),n(zs,ms),n(zs,to),n(zs,so),n(zs,wo),n(zs,Po),n(zs,Ls),n(zs,Uo),n(zs,Vo),n(zs,Yo),n(zs,Xo),n(zs,na),n(zs,oa),n(zs,Te),n(zs,da),n(zs,Ia),n(zs,Ma),n(zs,Da),n(zs,Ba),n(zs,Wa);var ja={};function Za(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}(e,t,n||Ya)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ya(e,t){return e>t?1:e<t?-1:0}function Ja(e,t,n,r,s){return ei(e,t,n,r,s,0)}function Xa(e,t,n,r,s,o){return ei(e,t,n,r,s,0,!1,o,!0)}function Qa(e,t,n,r,s,o){return ei(e,t,n,r,s,o,!0)}function ei(e,t,n,r,s,o,a=!1,i=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(ri);const c=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=t;if(n<s)break;let i=!1;for(let n=h.length-1;n>=a;--n){const a=ti(e,o,h[n]);if(a>=r){i=!0;break}if(t.score=t.score*ni(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(o),d.push(t.score)):t.score>s&&Za(u,t,ri))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function ti(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(o,u),m=Math.max(a,c),y=Math.min(i,h),b=Math.min(l,d),k=Math.max(y-g,0)*Math.max(b-m,0);return k/(p+f-k)}function ni(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function ri(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function si(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=os(e,"int32"),s=os([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const o=r.indexToLoc(n[t]),a=t*e.length;s.values.set(o,a)}return s.toTensor()}t(ja,"nonMaxSuppressionV3Impl",(()=>Ja)),t(ja,"nonMaxSuppressionV4Impl",(()=>Xa)),t(ja,"nonMaxSuppressionV5Impl",(()=>Qa)),t(ja,"whereImpl",(()=>si));const oi=bn({concat_:function(e,t=0){b(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=yn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return is(n[0]);const r=n,s={axis:t};return cn.runKernel("Concat",r,s)}});const ai=bn({imag_:function(e){const t={input:mn(e,"input","imag")};return cn.runKernel("Imag",t)}});const ii=bn({real_:function(e){const t={input:mn(e,"input","real")};return cn.runKernel("Real",t)}});const li=bn({slice_:function(e,t,n){const r=mn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:t,size:n};return cn.runKernel("Slice",s,o)}});const ui=bn({split_:function(e,t,n=0){const r={x:mn(e,"x","split")},s={numOrSizeSplits:t,axis:n};return cn.runKernel("SplitV",r,s)}});function ci(e,t="float32"){if("complex64"===t){const t=ci(e,"float32"),n=ci(e,"float32");return kn(t,n)}const n=X(S(e),t);return cn.makeTensor(n,e,t)}const hi=bn({zerosLike_:function(e){const t={x:mn(e,"x","zerosLike")};return cn.runKernel("ZerosLike",t)}});const di=bn({fft_:function(e){b("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return cn.runKernel("FFT",t)}});const pi=bn({rfft_:function(e,t){b("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),o=e.shape.map((e=>e));o[e.shape.length-1]=t,s=li(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=oi([e,ci(r)],e.shape.length-1),n=t}else s=e;const o=hi(s),a=No(kn(s,o),[r,n]),i=di(a),l=Math.floor(n/2)+1,u=ii(i),c=ai(i),h=ui(u,[l,n-l],u.shape.length-1),d=ui(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,No(kn(h[0],d[0]),p)}});const fi=bn({ifft_:function(e){b("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return cn.runKernel("IFFT",t)}});const gi=bn({reverse_:function(e,t){const n={x:mn(e,"x","reverse")},r={dims:t};return cn.runKernel("Reverse",n,r)}});function mi(e,t){if((C(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&C(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wn(e,[],[],t)}bn({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=No(e,[n,t]);r=fi(s)}else{const s=[n,2*(t-1)],o=No(ii(e),[n,t]),a=No(ai(e),[n,t]),i=gi(li(o,[0,1],[n,t-2]),1),l=vo(gi(li(a,[0,1],[n,t-2]),1),mi(-1)),u=oi([o,i],1),c=oi([a,l],1),h=No(kn(u,c),[s[0],s[1]]);r=fi(h)}if(r=ii(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=No(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});function yi(e,t){w(e);const n=pn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wn(e,null,n,t)}function bi(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let o=0;o<e;++o){const a=2*Math.PI*o/(e+r-1);s[o]=t-n*Math.cos(a)}return yi(s,"float32")}bn({hammingWindow_:function(e){return bi(e,.54,.46)}});const ki=bn({hannWindow_:function(e){return bi(e,.5,.5)}});function wi(e,t,n){const r={shape:e,value:t,dtype:n};return cn.runKernel("Fill",{},r)}function Ii(e,t,n){if(w(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=pn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wn(e,t,r,n)}const Si=bn({frame_:function(e,t,n,r=!1,s=0){let o=0;const a=[];for(;o+t<=e.size;)a.push(li(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=oi([li(e,o,t-r),wi([r],s)]);a.push(i),o+=n}return 0===a.length?Ii([],[0,t]):No(oi(a),[a.length,t])}});bn({stft_:function(e,t,n,r,s=ki){var o;null==r&&(o=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(o)/Math.log(2)))));const a=Si(e,t,n),i=vo(a,s(t));return pi(i,r)}});bn({cropAndResize_:function(e,t,n,r,s="bilinear",o=0){const a=mn(e,"image","cropAndResize"),i=mn(t,"boxes","cropAndResize","float32"),l=mn(n,"boxInd","cropAndResize","int32"),u=i.shape[0];b(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),b(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`)),b(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`)),b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),b("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:i,boxInd:l},h={method:s,extrapolationValue:o,cropSize:r};return cn.runKernel("CropAndResize",c,h)}});bn({flipLeftRight_:function(e){const t=mn(e,"image","flipLeftRight","float32");b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return cn.runKernel("FlipLeftRight",n,{})}});const vi=bn({tile_:function(e,t){const n=mn(e,"x","tile","string_or_numeric");b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return cn.runKernel("Tile",r,s)}});bn({grayscaleToRGB_:function(e){const t=mn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,vi(t,s)}});bn({rotateWithOffset_:function(e,t,n=0,r=.5){const s=mn(e,"image","rotateWithOffset","float32");b(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const o={image:s},a={radians:t,fillValue:n,center:r};return cn.runKernel("RotateWithOffset",o,a)}});function xi(e,t,n,r,s,o){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const a=e.shape[0];return n=Math.min(n,a),b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),b(1===t.rank,(()=>"scores must be a 1D tensor")),b(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),b(0<=o&&o<=1,(()=>`softNmsSigma must be in [0, 1], but was '${o}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}bn({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=mn(e,"boxes","nonMaxSuppression","float32"),a=mn(t,"scores","nonMaxSuppression","float32"),i=xi(o,a,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return cn.runKernel("NonMaxSuppressionV3",{boxes:o,scores:a},l)}});bn({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=mn(e,"boxes","nonMaxSuppression"),i=mn(t,"scores","nonMaxSuppression"),l=xi(a,i,n,r,s,o),u={boxes:a,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:o=l.softNmsSigma},h=cn.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}});bn({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=mn(e,"boxes","nonMaxSuppression"),i=mn(t,"scores","nonMaxSuppression"),l=xi(a,i,n,r,s,null),u={boxes:a,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:o},h=cn.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});bn({resizeBilinear_:function(e,t,n=!1,r=!1){const s=mn(e,"images","resizeBilinear");b(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),b(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=No(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:o},l={alignCorners:n,halfPixelCenters:r,size:t},u=cn.runKernel("ResizeBilinear",i,l);return a?No(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});bn({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=mn(e,"images","resizeNearestNeighbor");b(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),b("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),b(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=No(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:o},l={alignCorners:n,halfPixelCenters:r,size:t},u=cn.runKernel("ResizeNearestNeighbor",i,l);return a?No(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Ei=bn({bincount_:function(e,t,n){const r=mn(e,"x","bincount"),s=mn(t,"weights","bincount");b("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),b(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const o={x:r,weights:s},a={size:n};return cn.runKernel("Bincount",o,a)}});const Ti=bn({lessEqual_:function(e,t){let n=mn(e,"a","lessEqual","string_or_numeric"),r=mn(t,"b","lessEqual","string_or_numeric");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("LessEqual",s)}});const Ni=bn({greater_:function(e,t){let n=mn(e,"a","greater","string_or_numeric"),r=mn(t,"b","greater","string_or_numeric");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("Greater",s)}});const Ai=bn({add_:function(e,t){let n=mn(e,"a","add"),r=mn(t,"b","add");[n,r]=nn(n,r);const s={a:n,b:r};return cn.runKernel("Add",s)}});const Mi=bn({floorDiv_:function(e,t){let n=mn(e,"a","floorDiv"),r=mn(t,"b","floorDiv");[n,r]=nn(n,r);const s={a:n,b:r};return cn.runKernel("FloorDiv",s)}});const Fi=bn({div_:function(e,t){let n=mn(e,"a","div"),r=mn(t,"b","div");if([n,r]=nn(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Mi(n,r);const s={a:n,b:r};return cn.runKernel("RealDiv",s,{})}});const Di=bn({sub_:function(e,t){let n=mn(e,"a","sub"),r=mn(t,"b","sub");[n,r]=nn(n,r);const s={a:n,b:r};return cn.runKernel("Sub",s)}});const Ri=bn({round_:function(e){const t={x:mn(e,"x","round")};return cn.runKernel("Round",t)}});const $i=bn({broadcastTo_:function(e,t){let n=mn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=No(n,e)}const s=n.shape,o=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])o[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===o.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return is(n);const a={x:n},i={reps:o};return cn.runKernel("Tile",a,i)}});const _i=bn({where_:function(e,t,n){const r=mn(t,"a","where"),s=mn(n,"b","where"),o=mn(e,"condition","where","bool"),a=ks(ks(o.shape,r.shape),s.shape),i={condition:$i(o,a),t:$i(r,a),e:$i(s,a)};return cn.runKernel("Select",i)}});function Bi(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return cn.runKernel("Range",{},s)}bn({threshold_:function(e,t="binary",n=!1,r=.5){const s=mn(e,"image","threshold"),o=s.shape[0]*s.shape[1];let a,i,l,u,c=vo(yi([r]),255);if(b(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),b(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),b("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[a,i,l]=ui(s,[1,1,1],-1);const e=vo(a,.2989),t=vo(i,.587),n=vo(l,.114);u=Ai(Ai(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,r,s,o,a,i,l=yi([-1]),u=yi([0]),c=yi([0]);for(let h=0;h<e.size-1;h++){n=li(e,0,h+1),r=li(e,h+1),a=Fi(Fo(n),t),i=Fi(Fo(r),t);const d=Fo(vo(n,Bi(0,n.size)));s=Fi(d,Fo(n));const p=wi(r.shape,n.size),f=Ai(Bi(0,r.size),p),g=vo(r,f);o=Fi(Fo(g),Fo(r));const m=Di(s,o),y=Di(s,o),b=vo(a,i);c=vo(vo(b,m),y);const k=Ni(c,u);u=_i(k,c,u),l=_i(k,yi([h]),l)}return l}(Ei(as(Ri(u),"int32"),In([]),256),o)}const h=n?Ti(u,c):Ni(u,c);return as(vo(h,255),"int32")}});bn({transform_:function(e,t,n="nearest",r="constant",s=0,o){const a=mn(e,"image","transform","float32"),i=mn(t,"transforms","transform","float32");b(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),b(2===i.rank&&(i.shape[0]===a.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),b(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const l={image:a,transforms:i},u={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return cn.runKernel("Transform",l,u)}});const Oi=bn({greaterEqual_:function(e,t){let n=mn(e,"a","greaterEqual","string_or_numeric"),r=mn(t,"b","greaterEqual","string_or_numeric");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("GreaterEqual",s)}});const Pi=bn({logicalAnd_:function(e,t){const n=mn(e,"a","logicalAnd","bool"),r=mn(t,"b","logicalAnd","bool");ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("LogicalAnd",s)}});const zi=bn({stack_:function(e,t=0){const n=yn(e,"tensors","stack","string_or_numeric");b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return cn.runKernel("Pack",r,s)}});const Ci=bn({unstack_:function(e,t=0){const n=mn(e,"x","unstack","string_or_numeric");b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return cn.runKernel("Unpack",r,s)}});bn({bandPart_:function(e,t,n){b(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),b(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=mn(e,"a","bandPart");b(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[o,a]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=o),n<0&&(n=a);const i=No(Bi(0,o,1,"int32"),[-1,1]),l=Bi(0,a,1,"int32"),u=Di(i,l),c=Pi(Ti(u,mi(+t,"int32")),Oi(u,mi(-n,"int32"))),h=ci([o,a],r.dtype);return No(zi(Ci(No(r,[-1,o,a])).map((e=>_i(c,e,h)))),s)}});const Li=bn({abs_:function(e){const t=mn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return cn.runKernel("ComplexAbs",e)}{const e={x:t};return cn.runKernel("Abs",e)}}});const Wi=bn({max_:function(e,t=null,n=!1){const r={x:mn(e,"x","max")},s={reductionIndices:t,keepDims:n};return cn.runKernel("Max",r,s)}});const Ui=bn({min_:function(e,t=null,n=!1){const r={x:mn(e,"x","min")},s={axis:t,keepDims:n};return cn.runKernel("Min",r,s)}});const Hi=bn({pow_:function(e,t){let n=mn(e,"base","pow"),r=mn(t,"exp","pow");[n,r]=nn(n,r);const s={a:n,b:r};return cn.runKernel("Pow",s)}});const Vi=bn({sqrt_:function(e){const t={x:mn(e,"x","sqrt","float32")};return cn.runKernel("Sqrt",t)}});const qi=bn({square_:function(e){const t=mn(e,"x","square");return cn.runKernel("Square",{x:t},{})}});function Gi(e,t,n=null){if(0===e.rank)return Li(e);if(1!==e.rank&&null===n)return Gi(No(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Fo(Li(e),n);if(t===1/0)return Wi(Li(e),n);if(t===-1/0)return Ui(Li(e),n);if("euclidean"===t||2===t)return Vi(Fo(Hi(Li(e),mi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Wi(Fo(Li(e),n[0]),n[1]-1);if(t===1/0)return Wi(Fo(Li(e),n[1]),n[0]);if(t===-1/0)return Ui(Fo(Li(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Vi(Fo(qi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ki=bn({norm_:function(e,t="euclidean",n=null,r=!1){const s=Gi(e=mn(e,"x","norm"),t,n);let o=s.shape;if(r){const t=R(n,e.shape);o=Ys(s.shape,t)}return No(s,o)}});const ji=bn({squeeze_:function(e,t){const n=mn(e,"x","squeeze","string_or_numeric");return No(n,$(n.shape,t).newShape)}});bn({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,b(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)b(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ui(e,e.shape[0],0).map((e=>ji(e,[0])));b(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(cn.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=vo(Fo(vo(n[r],e)),n[r]);e=Di(e,t)}return Fi(e,Ki(e,"euclidean"))})));return t?zi(n,0):n}});function Zi(){return cn}function Yi(e,t){return cn.tidy(e,t)}Wt=function(e){ae().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Ji=bn({expandDims_:function(e,t=0){const n=mn(e,"x","expandDims","string_or_numeric");b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return cn.runKernel("ExpandDims",r,s)}});const Xi=bn({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=os([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)s.set(1,e,e);const a=No(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return vi(Ji(a,0),[n[0],1,1]);if(2===n.length)return vi(Ji(Ji(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return vi(Ji(Ji(Ji(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Qi=bn({matMul_:function(e,t,n=!1,r=!1){let s=mn(e,"a","matMul"),o=mn(t,"b","matMul");[s,o]=nn(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return cn.runKernel("BatchMatMul",a,i)}});const el=bn({neg_:function(e){const t={x:mn(e,"x","neg")};return cn.runKernel("Neg",t)}});const tl=bn({transpose_:function(e,t,n){const r=mn(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),b(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{b(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},o={perm:t};return"complex64"===r.dtype?Yi((()=>{let e=ii(r),t=ai(r);return e=cn.runKernel("Transpose",{x:e},o),t=cn.runKernel("Transpose",{x:t},o),n&&(t=el(t)),kn(e,t)})):cn.runKernel("Transpose",s,o)}});function nl(e,t=!1){return cn.tidy((()=>{b(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Xi(n),o=is(e);const a=Ii([[1]],[1,1]);let i=is(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=o,l=i,u=s;[i,o,s]=cn.tidy((()=>{const t=li(o,[e,e],[n-e,1]),l=Ki(t),u=li(o,[e,e],[1,1]),c=_i(Ni(u,0),Ii([[-1]]),Ii([[1]])),h=Di(u,vo(c,l)),d=Fi(t,h);i=1===d.shape[0]?is(a):oi([a,li(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=el(Fi(Qi(c,h),l)),f=li(o,[e,0],[n-e,r]),g=vo(p,i),m=tl(i);if(0===e)o=Di(f,Qi(g,Qi(m,f)));else{const t=Di(f,Qi(g,Qi(m,f)));o=oi([li(o,[0,0],[e,r]),t],0)}const y=tl(g),b=li(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Di(b,Qi(Qi(b,i),y));else{const t=Di(b,Qi(Qi(b,i),y));s=oi([li(s,[0,0],[n,e]),t],1)}return[i,o,s]})),rn([t,l,u]).forEach((e=>e.dispose()))}return!t&&n>r&&(s=li(s,[0,0],[n,r]),o=li(o,[0,0],[r,r])),[s,o]}))}bn({qr_:function(e,t=!1){if(b(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return nl(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ci(No(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],o=[];r.forEach((e=>{const[n,r]=nl(e,t);s.push(n),o.push(r)}));return[No(zi(s,0),e.shape),No(zi(o,0),e.shape)]}}});var rl,sl;(sl=rl||(rl={}))[sl.NONE=0]="NONE",sl[sl.MEAN=1]="MEAN",sl[sl.SUM=2]="SUM",sl[sl.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const ol=bn({mean_:function(e,t=null,n=!1){const r={x:mn(e,"x","mean")},s={axis:t,keepDims:n};return cn.runKernel("Mean",r,s)}});const al=bn({notEqual_:function(e,t){let n=mn(e,"a","notEqual","string_or_numeric"),r=mn(t,"b","notEqual","string_or_numeric");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("NotEqual",s)}});function il(e,t="float32"){if("complex64"===t){const t=il(e,"float32"),n=ci(e,"float32");return kn(t,n)}const n=J(S(e),t);return cn.makeTensor(n,e,t)}const ll=bn({computeWeightedLoss_:function(e,t,n=rl.SUM_BY_NONZERO_WEIGHTS){const r=mn(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=mn(t,"weights","computeWeightedLoss"));const o=null==s?r:vo(r,s);if(n===rl.NONE)return o;if(n===rl.SUM)return Fo(o);if(n===rl.MEAN){if(null==s)return ol(o);{const e=r.size/s.size,t=Fi(Fo(o),Fo(s));return e>1?Fi(t,mi(e)):t}}if(n===rl.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Fi(Fo(o),mi(r.size));{const e=vo(s,il(r.shape)),t=as(Fo(al(e,mi(0))),"float32");return Fi(Fo(o),t)}}throw Error(`Unknown reduction: ${n}`)}});bn({absoluteDifference_:function(e,t,n,r=rl.SUM_BY_NONZERO_WEIGHTS){const s=mn(e,"labels","absoluteDifference"),o=mn(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=mn(n,"weights","absoluteDifference")),k(s.shape,o.shape,"Error in absoluteDifference: ");const i=Li(Di(s,o));return ll(i,a,r)}});bn({cosineDistance_:function(e,t,n,r,s=rl.SUM_BY_NONZERO_WEIGHTS){const o=mn(e,"labels","cosineDistance"),a=mn(t,"predictions","cosineDistance");let i=null;null!=r&&(i=mn(r,"weights","cosineDistance")),k(o.shape,a.shape,"Error in cosineDistance: ");const l=mi(1),u=Di(l,Fo(vo(o,a),n,!0));return ll(u,i,s)}});bn({hingeLoss_:function(e,t,n,r=rl.SUM_BY_NONZERO_WEIGHTS){let s=mn(e,"labels","hingeLoss");const o=mn(t,"predictions","hingeLoss");let a=null;null!=n&&(a=mn(n,"weights","hingeLoss")),k(s.shape,o.shape,"Error in hingeLoss: ");const i=mi(1);s=Di(vo(mi(2),s),i);const l=Eo(Di(i,vo(s,o)));return ll(l,a,r)}});const ul=bn({minimum_:function(e,t){let n=mn(e,"a","minimum"),r=mn(t,"b","minimum");[n,r]=nn(n,r),"bool"===n.dtype&&(n=as(n,"int32"),r=as(r,"int32")),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("Minimum",s)}});bn({huberLoss_:function(e,t,n,r=1,s=rl.SUM_BY_NONZERO_WEIGHTS){const o=mn(e,"labels","huberLoss"),a=mn(t,"predictions","huberLoss");let i=null;null!=n&&(i=mn(n,"weights","huberLoss")),k(o.shape,a.shape,"Error in huberLoss: ");const l=mi(r),u=Li(Di(a,o)),c=ul(u,l),h=Di(u,c),d=Ai(vo(mi(.5),qi(c)),vo(l,h));return ll(d,i,s)}});const cl=bn({log_:function(e){const t={x:mn(e,"x","log","float32")};return cn.runKernel("Log",t)}});bn({logLoss_:function(e,t,n,r=1e-7,s=rl.SUM_BY_NONZERO_WEIGHTS){const o=mn(e,"labels","logLoss"),a=mn(t,"predictions","logLoss");let i=null;null!=n&&(i=mn(n,"weights","logLoss")),k(o.shape,a.shape,"Error in logLoss: ");const l=mi(1),u=mi(r),c=el(vo(o,cl(Ai(a,u)))),h=vo(Di(l,o),cl(Ai(Di(l,a),u))),d=Di(c,h);return ll(d,i,s)}});const hl=bn({squaredDifference_:function(e,t){let n=mn(e,"a","squaredDifference"),r=mn(t,"b","squaredDifference");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("SquaredDifference",s,{})}});bn({meanSquaredError_:function(e,t,n,r=rl.SUM_BY_NONZERO_WEIGHTS){const s=mn(e,"labels","meanSquaredError"),o=mn(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=mn(n,"weights","meanSquaredError")),k(s.shape,o.shape,"Error in meanSquaredError: ");const i=hl(s,o);return ll(i,a,r)}});const dl=bn({exp_:function(e){const t={x:mn(e,"x","exp")};return cn.runKernel("Exp",t)}});const pl=bn({log1p_:function(e){const t={x:mn(e,"x","log1p")};return cn.runKernel("Log1p",t)}});bn({sigmoidCrossEntropy_:function(e,t,n,r=0,s=rl.SUM_BY_NONZERO_WEIGHTS){let o=mn(e,"multiClassLabels","sigmoidCrossEntropy");const a=mn(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=mn(n,"weights","sigmoidCrossEntropy")),k(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=mi(r),t=mi(1),n=mi(.5);o=Ai(vo(o,Di(t,e)),vo(n,e))}const l=function(e,t){const n=mn(e,"labels","sigmoidCrossEntropyWithLogits"),r=mn(t,"logits","sigmoidCrossEntropyWithLogits");k(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Eo(r),o=vo(r,n),a=pl(dl(el(Li(r))));return Ai(Di(s,o),a)}(o,a);return ll(l,i,s)}});const fl=bn({logSumExp_:function(e,t=null,n=!1){const r=mn(e,"x","logSumExp"),s=R(t,r.shape),o=Wi(r,s,!0),a=Di(r,o),i=dl(a),l=Fo(i,s),u=cl(l),c=Ai(No(o,u.shape),u);if(n){const e=Ys(c.shape,s);return No(c,e)}return c}});function gl(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(s=(e,t,r)=>{const s=fl(t,[n],!0),o=Di(as(t,"float32"),s);r([e,o]);const a=el(vo(o,e));return{value:Fo(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,o=Ys(e.shape,[n]);return[vo(No(e,o),Di(as(r,"float32"),dl(s))),vo(No(e,o),Di(dl(s),as(r,"float32")))]}}},cn.customGrad(s));var s;return r(e,t)}bn({softmaxCrossEntropy_:function(e,t,n,r=0,s=rl.SUM_BY_NONZERO_WEIGHTS){let o=mn(e,"onehotLabels","softmaxCrossEntropy");const a=mn(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=mn(n,"weights","softmaxCrossEntropy")),k(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=mi(r),t=mi(1),n=mi(o.shape[1]);o=Ai(vo(o,Di(t,e)),Fi(e,n))}const l=gl(o,a);return ll(l,i,s)}});bn({sparseFillEmptyRows_:function(e,t,n,r){const s=mn(e,"indices","sparseFillEmptyRows","int32"),o=mn(t,"values","sparseFillEmptyRows"),a=mn(n,"denseShape","sparseFillEmptyRows","int32"),i=mn(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==o.rank)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:s,values:o,denseShape:a,defaultValue:i},u=cn.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});bn({sparseReshape_:function(e,t,n){const r=mn(e,"inputIndices","sparseReshape","int32"),s=mn(t,"inputShape","sparseReshape","int32"),o=mn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=cn.runKernel("SparseReshape",a);return{outputIndices:i[0],outputShape:i[1]}}});bn({sparseSegmentMean_:function(e,t,n){const r=mn(e,"data","sparseSegmentMean"),s=mn(t,"indices","sparseSegmentMean","int32"),o=mn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return cn.runKernel("SparseSegmentMean",a)}});bn({sparseSegmentSum_:function(e,t,n){const r=mn(e,"data","sparseSegmentSum"),s=mn(t,"indices","sparseSegmentSum","int32"),o=mn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return cn.runKernel("SparseSegmentSum",a)}});bn({stringNGrams_:function(e,t,n,r,s,o,a,i){const l=mn(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=mn(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},h={data:l,dataSplits:u},d=cn.runKernel("StringNGrams",h,c);return{nGrams:d[0],nGramsSplits:d[1]}}});bn({stringSplit_:function(e,t,n=!0){const r=mn(e,"input","stringSplit","string"),s=mn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},a={input:r,delimiter:s},i=cn.runKernel("StringSplit",a,o);return{indices:i[0],values:i[1],shape:i[2]}}});bn({stringToHashBucketFast_:function(e,t){const n=mn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return cn.runKernel("StringToHashBucketFast",s,r)}});const ml=bn({equal_:function(e,t){let n=mn(e,"a","equal","string_or_numeric"),r=mn(t,"b","equal","string_or_numeric");[n,r]=nn(n,r),ks(n.shape,r.shape);const s={a:n,b:r};return cn.runKernel("Equal",s)}});const yl=bn({divNoNan_:function(e,t){let n=mn(e,"a","div"),r=mn(t,"b","div");[n,r]=nn(n,r);const s=Fi(n,r),o=hi(s),a=ml(r,o);return _i(a,o,s)}});var bl={},kl=o("cmoHh"),wl=o("euRi5"),Il=o("hDsEw"),Sl=o("3J2Zm"),vl=o("6Px8M"),xl=o("lDm0S"),El={};!function(e,t,n){var r,s=256,a=n.pow(s,6),i=n.pow(2,52),l=2*i,u=255;function c(o,u,c){var m=[],y=f(p((u=1==u?{entropy:!0}:u||{}).entropy?[o,g(t)]:null==o?function(){try{var n;return r&&(n=r.randomBytes)?n=n(s):(n=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(n)),g(n)}catch(n){var o=e.navigator,a=o&&o.plugins;return[+new Date,e,a,e.screen,g(t)]}}():o,3),m),b=new h(m),k=function(){for(var e=b.g(6),t=a,n=0;e<i;)e=(e+n)*s,t*=s,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return k.int32=function(){return 0|b.g(4)},k.quick=function(){return b.g(4)/4294967296},k.double=k,f(g(b.S),t),(u.pass||c||function(e,t,r,s){return s&&(s.S&&d(s,b),e.state=function(){return d(b,{})}),r?(n.random=e,t):e})(k,y,"global"in u?u.global:this==n,u.state)}function h(e){var t,n=e.length,r=this,o=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);o<s;)i[o]=o++;for(o=0;o<s;o++)i[o]=i[a=u&a+e[o%n]+(t=i[o])],i[a]=t;(r.g=function(e){for(var t,n=0,o=r.i,a=r.j,i=r.S;e--;)t=i[o=u&o+1],n=n*s+i[u&(i[o]=i[a=u&a+t])+(i[a]=t)];return r.i=o,r.j=a,n})(s)}function d(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function p(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(p(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function f(e,t){for(var n,r=e+"",s=0;s<r.length;)t[u&s]=u&(n^=19*t[u&s])+r.charCodeAt(s++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(f(n.random(),t),El){El=c;try{r=o("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return c})):n.seedrandom=c}("undefined"!=typeof self?self:El,[],Math),El.alea=kl,El.xor128=wl,El.xorwow=Il,El.xorshift7=Sl,El.xor4096=vl,El.tychei=xl,bl=El;class Tl{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=bl.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Nl=bn({randomUniform_:function(e,t=0,n=1,r="float32",s){const o=os(e,r),a=new Tl(t,n,null,s);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});function Al(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Oe.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function Ml(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(Al(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,u=Oe.sizeFromShape(a.shape),c=n||a.dtype,h=Oe.getArrayFromDType(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return i.makeTensorInfo(a.shape,c,h)}}function Fl(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(Al(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,l=i.data.get(a.dataId).values,u=n||a.dtype,c=t(l,u,s);return i.makeTensorInfo(a.shape,u,c)}}const Dl=Ml("Elu",(e=>e>=0?e:Math.exp(e)-1)),Rl={kernelName:"Elu",backendName:"cpu",kernelFunc:Dl};function $l(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const _l={kernelName:"Identity",backendName:"cpu",kernelFunc:$l};function Bl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r;Al([s],"leakyRelu");const a=Oe.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,l=Oe.getTypedArrayFromDType("float32",a);for(let e=0;e<i.length;e++)l[e]=i[e]<0?o*i[e]:i[e];return n.makeTensorInfo(s.shape,"float32",l)}const Ol={kernelName:"LeakyRelu",backendName:"cpu",kernelFunc:Bl};function Pl(e){return(t,n,r,s,o)=>{const a=zs.assertAndGetBroadcastShape(t,n),i=a.length,l=Oe.computeStrides(a),u=Oe.sizeFromShape(a),c=Oe.getTypedArrayFromDType(o,u),h=t.length,d=n.length,p=Oe.computeStrides(t),f=Oe.computeStrides(n),g=zs.getBroadcastDims(t,a),m=zs.getBroadcastDims(n,a);if(g.length+m.length===0)for(let t=0;t<c.length;++t)c[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<c.length;++t){const n=Oe.indexToLoc(t,i,l),o=n.slice(-h);g.forEach((e=>o[e]=0));const a=Oe.locToIndex(o,h,p),u=n.slice(-d);m.forEach((e=>u[e]=0));const y=Oe.locToIndex(u,d,f);c[t]=e(r[a],s[y])}return[c,a]}}const zl=Pl(((e,t)=>e<0?t*e:e));function Cl(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;Al([r,s],"prelu");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[i,l]=zl(r.shape,s.shape,o,a,"float32");return n.makeTensorInfo(l,"float32",i)}const Ll={kernelName:"Prelu",backendName:"cpu",kernelFunc:Cl},Wl=Ml("Relu",(e=>Math.max(0,e))),Ul={kernelName:"Relu",backendName:"cpu",kernelFunc:Wl},Hl=Ml("Relu6",(e=>Math.min(Math.max(0,e),6))),Vl={kernelName:"Relu6",backendName:"cpu",kernelFunc:Hl};function ql(e){return(t,n,r)=>{const s=Oe.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}ql((e=>1/(1+Math.exp(-e))));const Gl=Ml("Sigmoid",(e=>1/(1+Math.exp(-e)))),Kl={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:Gl};function jl(e,t,n,r,s){if("linear"===n)return $l({inputs:{x:t},backend:e});if("relu"===n)return Wl({inputs:{x:t},backend:e});if("elu"===n)return Dl({inputs:{x:t},backend:e});if("relu6"===n)return Hl({inputs:{x:t},backend:e});if("prelu"===n)return Cl({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Bl({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return Gl({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Zl(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(s.shape,"float32",a)},i}const Yl={kernelName:"Complex",backendName:"cpu",kernelFunc:Zl};function Jl(e,t,n="float32"){if("complex64"===n){return Zl({inputs:{real:Jl(e,t,"float32"),imag:Jl(e,t,"float32")},backend:e})}const r=Oe.makeZerosTypedArray(Oe.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Xl(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const Ql={kernelName:"Real",backendName:"cpu",kernelFunc:Xl};function eu(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return $l({inputs:{x:s},backend:n});const e=Jl(n,s.shape,s.dtype),t=eu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Zl({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Xl({inputs:{input:s},backend:n}),t=eu({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!Oe.hasEncodingLoss(s.dtype,o)){const e=$l({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const a=n.data.get(s.dataId).values,[i,l,u]=function(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Oe.toTypedArray([0],n),[s,o]=Pl(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[o,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,l,u)}const tu={kernelName:"Cast",backendName:"cpu",kernelFunc:eu};function nu(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:a}=n,i=s;Al([o,a],e);const l=i.data.get(o.dataId).values,u=i.data.get(a.dataId).values,c="string"===o.dtype?zs.fromUint8ToStringArray(l):l,h="string"===o.dtype?zs.fromUint8ToStringArray(u):u,d=r||o.dtype,[p,f]=t(o.shape,a.shape,c,h,d);return i.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:o,b:a}=e,i=s;if("complex64"===o.dtype||"complex64"===a.dtype){const e=eu({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=i.data.get(r.dataId).values,u=i.data.get(s.dataId).values,c=eu({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=i.data.get(d.dataId).values,g=i.data.get(p.dataId).values,[m,y,b]=n(o.shape,a.shape,l,u,f,g),k=i.makeTensorInfo(b,"float32",m),w=i.makeTensorInfo(b,"float32",y),I=Zl({inputs:{real:k,imag:w},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(k),i.disposeIntermediateTensorInfo(w),I}{const e=i.data.get(o.dataId).values,n=i.data.get(a.dataId).values,s=r||o.dtype,[l,u]=t(o.shape,a.shape,e,n,s);return i.makeTensorInfo(u,s,l)}}}function ru(e){return(t,n,r,s,o,a)=>{const i=zs.assertAndGetBroadcastShape(t,n),l=Oe.sizeFromShape(i),u=i.length,c=Oe.computeStrides(i),h=Oe.getTypedArrayFromDType("float32",l),d=Oe.getTypedArrayFromDType("float32",l),p=zs.getBroadcastDims(t,i),f=zs.getBroadcastDims(n,i),g=zs.mergeRealAndImagArrays(r,s),m=zs.mergeRealAndImagArrays(o,a),y=t.length,b=Oe.computeStrides(t),k=n.length,w=Oe.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Oe.indexToLoc(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=Oe.locToIndex(r,y,b),o=n.slice(-k);f.forEach((e=>o[e]=0));const a=Oe.locToIndex(o,k,w),i=e(g[2*s],g[2*s+1],m[2*a],m[2*a+1]);h[t]=i.real,d[t]=i.imag}return[h,d,i]}}const su=nu("Add",Pl(((e,t)=>e+t)),ru(((e,t,n,r)=>({real:e+n,imag:t+r})))),ou={kernelName:"Add",backendName:"cpu",kernelFunc:su};function au(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,a=Oe.sizeFromShape(s.shape),i=Oe.inferFromImplicitShape(o,a),l=Oe.sizeFromShape(i);Oe.assert(a===l,(()=>`The new shape (${i}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const iu={kernelName:"Reshape",backendName:"cpu",kernelFunc:au};function lu(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o}=t,{transposeA:a,transposeB:i}=r;Al([s,o],"matMul");const l=s.shape.length,u=o.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=i?o.shape[u-1]:o.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=i?o.shape[u-2]:o.shape[u-1],f=s.shape.slice(0,-2),g=o.shape.slice(0,-2),m=Oe.sizeFromShape(f),y=Oe.sizeFromShape(g),b=ms.assertAndGetBroadcastShape(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);Oe.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`));const k=i?[y,p,h]:[y,h,p],w=au({inputs:{x:s},backend:n,attrs:{shape:a?[m,c,d]:[m,d,c]}}),I=au({inputs:{x:o},backend:n,attrs:{shape:k}}),S=a?w.shape[1]:w.shape[2],v=a?w.shape[2]:w.shape[1],x=i?I.shape[1]:I.shape[2],E=Math.max(m,y),T=n.data.get(w.dataId).values,N=n.data.get(I.dataId).values,A=Oe.computeStrides(w.shape),M=Oe.computeStrides(I.shape),[F,D,R]=a?[A[0],1,A[1]]:[A[0],A[1],1],[$,_,B]=i?[1,M[1],M[0]]:[M[1],1,M[0]],O=v*x,P=os([E,v,x],w.dtype),z=P.values,C=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<v;t+=C)for(let n=0;n<x;n+=C)for(let r=0;r<S;r+=C){const s=Math.min(t+C,v),o=Math.min(n+C,x),a=Math.min(r+C,S);for(let i=t;i<s;i++)for(let t=n;t<o;t++){let n=0;for(let s=r;s<a;s++){const r=Math.min(e,m-1)*F,o=Math.min(e,y-1)*B;n+=T[r+i*D+s*R]*N[s*$+t*_+o]}z[e*O+(i*x+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(b,P.dtype,P.values)}const uu={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:lu};const cu={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=lu({inputs:{a:s,b:o},attrs:{transposeA:l,transposeB:u},backend:n}),a&&(p=su({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=jl(n,d,c,i,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};const hu={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Al(t,"abs");let r=new Float32Array(Oe.sizeFromShape(t.shape));return r=function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},du={kernelName:"Acos",backendName:"cpu",kernelFunc:Ml("Acos",(e=>Math.acos(e)))},pu={kernelName:"Acosh",backendName:"cpu",kernelFunc:Ml("Acosh",(e=>Math.acosh(e)))};const fu={kernelName:"AddN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Al(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),o=os(r[0].shape,r[0].dtype),a=o.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function gu(e,t,n,r,s){const o=t.length,a=Oe.sizeFromShape(t),i=Oe.computeStrides(t),l=Oe.computeStrides(s),u=Oe.getTypedArrayFromDType(n,Oe.sizeFromShape(s));for(let t=0;t<a;++t){const n=Oe.indexToLoc(t,o,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Oe.locToIndex(s,o,l)]=e[t]}return u}function mu(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:o}=n;Al(s,"transpose");const a=s.shape.length,i=new Array(a);for(let e=0;e<i.length;e++)i[e]=s.shape[o[e]];const l=gu(r.data.get(s.dataId).values,s.shape,s.dtype,o,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}const yu={kernelName:"Transpose",backendName:"cpu",kernelFunc:mu};const bu={kernelName:"All",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;Al(s,"all");const i=Oe.parseAxisParam(o,s.shape);let l=i;const u=zs.getAxesPermutation(l,s.shape.length);let c=s;null!=u&&(c=mu({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zs.getInnerMostAxes(l.length,s.shape.length)),zs.assertAxesAreInnerMostDims("all",l,c.shape.length);const[h,d]=zs.computeOutAndReduceShapes(c.shape,l),p=Oe.sizeFromShape(d),f=Oe.makeZerosTypedArray(Oe.sizeFromShape(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=au({inputs:{x:m},backend:n,attrs:{shape:zs.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const ku={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;Al(s,"any");const i=Oe.parseAxisParam(o,s.shape);let l=i;const u=zs.getAxesPermutation(l,s.shape.length);let c=s;null!=u&&(c=mu({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zs.getInnerMostAxes(l.length,s.shape.length)),zs.assertAxesAreInnerMostDims("any",l,c.shape.length);const[h,d]=zs.computeOutAndReduceShapes(c.shape,l),p=Oe.sizeFromShape(d),f=Oe.makeZerosTypedArray(Oe.sizeFromShape(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=au({inputs:{x:m},backend:n,attrs:{shape:zs.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(m),e}return m}};const wu={kernelName:"ArgMax",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;Al(s,"argMax");let a=Oe.parseAxisParam(o,s.shape);const i=zs.getAxesPermutation(a,s.shape.length);let l=s;const u=[];null!=i&&(l=mu({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),a=zs.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],zs.assertAxesAreInnerMostDims("argMax",a,l.shape.length);const[c,h]=zs.computeOutAndReduceShapes(l.shape,a),d=Oe.sizeFromShape(c),p=Oe.makeZerosTypedArray(d,"int32"),f=Oe.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=g[t],r=0;for(let e=0;e<f;++e){const s=g[t+e];s>n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}};const Iu={kernelName:"ArgMin",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;Al(s,"argMin");let a=Oe.parseAxisParam(o,s.shape);const i=zs.getAxesPermutation(a,s.shape.length);let l=s;const u=[];null!=i&&(l=mu({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),a=zs.getInnerMostAxes(a.length,l.shape.length)),a=[a[0]],zs.assertAxesAreInnerMostDims("argMin",a,l.shape.length);const[c,h]=zs.computeOutAndReduceShapes(l.shape,a),d=Oe.sizeFromShape(c),p=Oe.makeZerosTypedArray(d,"int32"),f=Oe.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=g[t],r=0;for(let e=0;e<f;++e){const s=g[t+e];s<n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},Su={kernelName:"Asin",backendName:"cpu",kernelFunc:Ml("Asin",(e=>Math.asin(e)))},vu={kernelName:"Asinh",backendName:"cpu",kernelFunc:Ml("Asinh",(e=>Math.asinh(e)))},xu={kernelName:"Atan",backendName:"cpu",kernelFunc:Ml("Atan",(e=>Math.atan(e)))},Eu={kernelName:"Atan2",backendName:"cpu",kernelFunc:nu("Atan2",Pl(((e,t)=>Math.atan2(e,t))))},Tu={kernelName:"Atanh",backendName:"cpu",kernelFunc:Ml("Atanh",(e=>Math.atanh(e)))};function Nu(e,t,n,r,s,o){const a=s.strideHeight,i=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=os(s.outShape,n),m=g.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],k=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*a-d,I=Math.max(0,w),S=Math.min(s.inHeight,c+w),v=n+y*b;for(let n=0;n<s.outWidth;++n){const a=n*i-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let y=f,b=0,w=0;for(let n=I;n<S;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const a=e[s+n*r[2]+t];"max"===o&&a>y?y=a:"avg"===o&&(b+=a,w++)}if(isNaN(y))break}m[v+n*k+t]="avg"===o?b/w:y}}}return g}function Au(e,t,n,r,s=!1,o=!1){const a=os(r.outShape,"int32"),i=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=os(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*i-p;let y=m;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+m);for(let i=0;i<r.outWidth;++i){const h=i*l-f;let p=h;for(;p<0;)p+=c;const k=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,I=-1;for(let n=y;n<b;n+=u){const a=n-m;for(let i=p;i<k;i+=c){const l=i-h,u=g.get(e,n,i,t);u>w&&(w=u,I=s?o?((e*r.inHeight+n)*r.inWidth+i)*r.inChannels+t:(n*r.inWidth+i)*r.inChannels+t:a*d+l)}}a.set(I,e,n,i,t)}}return a}function Mu(e,t,n,r,s,o){const a=s.strideDepth,i=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,y=s.padInfo.left,b="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,k=os(s.outShape,n),w=k.values,I=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],v=s.outShape[3]*s.outShape[4],x=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*I,k=t*r[0];for(let t=0;t<s.inChannels;++t)for(let I=0;I<s.outDepth;++I){const E=I*a-g;let T=E;for(;T<0;)T+=u;const N=Math.min(s.inDepth,d+E),A=n+I*S;for(let n=0;n<s.outHeight;++n){const a=n*i-m;let d=a;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+a),I=A+n*v;for(let n=0;n<s.outWidth;++n){const a=n*l-y;let i=a;for(;i<0;)i+=h;const p=Math.min(s.inWidth,f+a),m=I+n*x;let S=b,v=0,E=0;for(let n=T;n<N;n+=u){const s=k+n*r[1];for(let n=d;n<g;n+=c){const a=s+n*r[2];for(let n=i;n<p;n+=h){const s=e[a+n*r[3]+t];if("max"===o&&s>S?S=s:"avg"===o&&(v+=s,E++),isNaN(S))break}if(isNaN(S))break}if(isNaN(S))break}w[m+t]="avg"===o?v/E:S}}}}return k}function Fu(e,t){const n=os(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let k=b;for(;k<0;)k+=a;const w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=i;const I=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*o-f;let S=p;for(;S<0;)S+=l;const v=Math.min(t.inWidth,h+p);let x=Number.NEGATIVE_INFINITY,E=-1;for(let t=k;t<w;t+=a){const n=t-b;for(let r=d;r<I;r+=i){const s=r-u;for(let o=S;o<v;o+=l){const a=o-p,i=e.get(g,t,r,o,m);i>=x&&(x=i,E=n*c*h+s*c+a)}}}n.set(E,g,y,r,s,m)}}}return n}const Du={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Al(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=r;Oe.assert(zs.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=zs.computePool2DInfo(s.shape,o,a,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Oe.arraysEqual(u.inShape,u.outShape))c=$l({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Oe.computeStrides(s.shape),r=Nu(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const Ru={kernelName:"AvgPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=r;Al(s,"avgPool3d");const c=zs.computePool3DInfo(s.shape,o,a,1,i,l,u),h=Mu(n.data.get(s.dataId).values,s.shape,s.dtype,Oe.computeStrides(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const $u={kernelName:"AvgPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=r;Al([s,o],"avgPool3DGrad");const c=zs.computePool3DInfo(o.shape,a,i,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,k=c.dilationWidth,w=c.effectiveFilterDepth,I=c.effectiveFilterHeight,S=c.effectiveFilterWidth,v=w-1-c.padInfo.front,x=S-1-c.padInfo.left,E=I-1-c.padInfo.top,T=os(o.shape,"float32"),N=1/(f*g*m),A=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const o=n-v,a=r-E,i=s-x;let l=0;for(let n=0;n<w;n+=y){const r=(o+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<I;n+=b){const s=(a+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<S;n+=k){const o=(i+n)/p;if(o<0||o>=c.outWidth||Math.floor(o)!==o)continue;l+=A.get(e,r,s,o,t)}}}T.set(l*N,e,n,r,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const _u={kernelName:"AvgPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,a=o;Al([s,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=zs.computePool2DInfo(a.shape,i,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,k=b-1-c.padInfo.left,w=y-1-c.padInfo.top,I=os(a.shape,"float32"),S=1/(p*f),v=n.data.get(s.dataId).values,x=os(s.shape,"float32",v);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,o=r-k;let a=0;for(let n=0;n<y;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=m){const s=(o+n)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;a+=x.get(e,r,s,t)}}I.set(a*S,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Bu={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:o,offset:a,mean:i,variance:l}=t;Oe.assert(i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Oe.assert(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Oe.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Al([s,i,l,o,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(l.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,y=p.length,b=d.length,k=h.length;let w=0,I=0,S=0,v=0;for(let e=0;e<c.length;++e)g[e]=f[w++]+(c[e]-h[I++])*p[S++]/Math.sqrt(d[v++]+u),w>=m&&(w=0),I>=k&&(I=0),S>=y&&(S=0),v>=b&&(v=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Ou(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:a}=r;Al(s,"slice");const[i,l]=ws.parseSliceParams(s,o,a);ws.assertParamsValid(s,i,l);const u=function(e,t,n,r,s){const o=ws.isSliceContinous(r,t,n),a=Oe.sizeFromShape(n),i=Oe.computeStrides(r);if(o){const n=ws.computeFlatOffset(t,i);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const l=os(r,s,"string"===s?zs.fromUint8ToStringArray(e):e),u=os(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?zs.fromStringArrayToUint8(u.values):u.values}(n.data.get(s.dataId).values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const Pu={kernelName:"Slice",backendName:"cpu",kernelFunc:Ou};const zu={kernelName:"BatchToSpaceND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:a}=r;Al([s],"batchToSpaceND");const i=o.reduce(((e,t)=>e*t)),l=zs.getReshaped(s.shape,o,i),u=zs.getPermuted(l.length,o.length),c=zs.getReshapedPermuted(s.shape,o,i),h=zs.getSliceBeginCoords(a,o.length),d=zs.getSliceSize(c,a,o.length),p=au({inputs:{x:s},backend:n,attrs:{shape:l}}),f=mu({inputs:{x:p},backend:n,attrs:{perm:u}}),g=au({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Ou({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function Cu(e,t,n,r,s){const o=Oe.sizeFromShape(r),a=Oe.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=o>0?t[n]:1)}return a}function Lu(e,t,n,r=!1){const s=e.shape[0],o=e.shape[1],a=os([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<o;s++){const o=e.get(i,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?a.set(1,i,o):t.size>0?a.set(a.get(i,o)+t.get(i,s),i,o):a.set(a.get(i,o)+1,i,o))}return a}const Wu={kernelName:"Bincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:o}=t,{size:a}=r,i=Cu(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,i)}};const Uu={kernelName:"BroadcastArgs",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=zs.assertAndGetBroadcastShape(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},Hu={kernelName:"Ceil",backendName:"cpu",kernelFunc:Fl("Ceil",ql((e=>Math.ceil(e))))},Vu={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:Ml("ClipByValue",((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}))},qu={kernelName:"ComplexAbs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Oe.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=n.data.get(o.dataId).values,l=n.data.get(a.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Gu(e,t,n,r){const s=Oe.getArrayFromDType(n,Oe.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Oe.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const o="string"===n?zs.fromUint8ToStringArray(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=o[a++]}r+=e.shape[1]}))}return s}function Ku(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const ju={kernelName:"Imag",backendName:"cpu",kernelFunc:Ku};function Zu(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=Oe.parseAxisParam(s,t[0].shape)[0];let a=zs.computeOutShape(t.map((e=>e.shape)),o);if(0===Oe.sizeFromShape(a))return n.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter((e=>Oe.sizeFromShape(e.shape)>0));if(1===i.length)return $l({inputs:{x:i[0]},backend:n});const l=i.map((e=>e.shape));if(zs.assertParamsConsistent(l,o),"complex64"===i[0].dtype){const e=i.map((e=>Xl({inputs:{input:e},backend:n}))),t=i.map((e=>Ku({inputs:{input:e},backend:n}))),r=Zu({inputs:e,backend:n,attrs:{axis:o}}),s=Zu({inputs:t,backend:n,attrs:{axis:o}}),a=Zl({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const u=i.map((e=>{const t=Oe.sizeFromShape(e.shape.slice(o));return au({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=zs.computeOutShape(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],d=Gu(c,a,t[0].dtype,h),p=zs.computeOutShape(i.map((e=>e.shape)),o),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Yu={kernelName:"Concat",backendName:"cpu",kernelFunc:Zu};function Ju(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r;Al([s,o],"conv2d");const h=zs.convertConv2DDataFormat(l),d=zs.computeConv2DInfo(s.shape,o.shape,a,u,i,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,k="channelsLast"===d.dataFormat,w=new zt(d.outShape,s.dtype),I=Oe.computeStrides(s.shape),S=Oe.computeStrides(o.shape),v=I[0],x=k?I[1]:I[2],E=k?I[2]:1,T=k?1:I[1],N=w.strides[0],A=k?w.strides[1]:w.strides[2],M=k?w.strides[2]:1,F=k?1:w.strides[1],D=n.data.get(s.dataId).values,R=n.data.get(o.dataId).values,$=w.values;for(let e=0;e<d.batchSize;++e){const t=e*v,n=e*N;for(let e=0;e<d.outHeight;++e){const r=n+e*A,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const o=e*S[0],a=t+n*x;for(let e=0;e<d.outWidth;++e){const t=r+e*M,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=a+r*E;let i=o+e*S[1];for(let e=0;e<d.inChannels;++e){const n=D[s+e*T];for(let e=0;e<d.outChannels;++e)$[t+e*F]+=n*R[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,$)}const Xu={kernelName:"Conv2D",backendName:"cpu",kernelFunc:Ju};const Qu={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;Al([s,o],"conv2dBackpropFilter");const h=zs.convertConv2DDataFormat(l),d=zs.computeConv2DInfo(s.shape,c,a,1,i,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,y="channelsLast"===d.dataFormat,b=new zt(d.filterShape,"float32"),k=d.padInfo.left,w=d.padInfo.top,I=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,v=new zt(s.shape,s.dtype,I),x=new zt(o.shape,o.dtype,S);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((k-r)/f)),o=Math.min(d.outWidth,(d.inWidth+k-r)/f);for(let a=0;a<d.inChannels;++a)for(let i=0;i<d.outChannels;++i){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=s;e<o;++e){const n=r+e*f-k;l+=y?v.get(u,t,n,a)*x.get(u,c,e,i):v.get(u,a,t,n)*x.get(u,i,c,e)}}b.set(l,e,r,a,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ec={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r;Al([s,o],"conv2dBackpropInput");const h=Oe.computeStrides(o.shape),d=Oe.computeStrides(s.shape);let p=zs.convertConv2DDataFormat(u);const f=zs.computeConv2DInfo(a,o.shape,i,1,l,c,!1,p),g=new zt(f.inShape,"float32"),m=g.values,y=n.data.get(s.dataId).values,b=n.data.get(o.dataId).values,[k,w,I]=h,{batchSize:S,filterHeight:v,filterWidth:x,inChannels:E,inHeight:T,inWidth:N,outChannels:A,outHeight:M,outWidth:F,strideHeight:D,strideWidth:R}=f;p=f.dataFormat;const $=v-1-f.padInfo.top,_=x-1-f.padInfo.left,B="channelsLast"===p,O=g.strides[0],P=B?g.strides[1]:g.strides[2],z=B?g.strides[2]:1,C=B?1:g.strides[1],L=d[0],W=B?d[1]:d[2],U=B?d[2]:1,H=B?1:d[1];for(let e=0;e<S;++e)for(let t=0;t<E;++t)for(let n=0;n<T;++n){const r=n-$,s=Math.max(0,Math.ceil(r/D)),o=Math.min(M,(v+r)/D);for(let a=0;a<N;++a){const i=a-_,l=Math.max(0,Math.ceil(i/R)),u=Math.min(F,(x+i)/R);let c=0;for(let n=s;n<o;++n){const s=n*D-r;for(let r=l;r<u;++r){const o=L*e+W*n+U*r,a=k*(v-1-s)+w*(x-1-(r*R-i))+I*t;for(let e=0;e<A;++e){c+=y[o+H*e]*b[a+e]}}}m[O*e+P*n+z*a+C*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const tc={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dilations:l}=r;Al([s,o],"conv3d");const u=zs.computeConv3DInfo(s.shape,o.shape,a,l,i),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,y=m.front,b=m.left,k=m.top,w=new zt(u.outShape,s.dtype),I=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,v=w.values,x=Oe.computeStrides(s.shape),E=Oe.computeStrides(o.shape);for(let e=0;e<u.batchSize;++e){const t=e*x[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*w.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const o=e*E[0],a=t+n*x[1];for(let e=0;e<u.outHeight;++e){const t=r+e*w.strides[2],n=e*u.strideHeight-k;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=o+e*E[1],i=a+r*x[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const o=s+e*E[2],a=i+t*u.inChannels;let l=o;for(let e=0;e<u.inChannels;++e){const t=I[a+e];for(let e=0;e<u.outChannels;++e)v[n+e]+=t*S[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const nc={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,pad:i,filterShape:l}=r;Al([s,o],"conv3dBackpropFilterV2");const u=Oe.computeStrides(s.shape),c=Oe.computeStrides(o.shape),h=zs.computeConv3DInfo(s.shape,l,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,y=h.filterWidth,b=new zt(h.filterShape,"float32"),k=b.values,[w,I,S,v]=b.strides,x=n.data.get(o.dataId).values,[E,T,N,A]=c,M=n.data.get(s.dataId).values,[F,D,R,$]=u,_=h.padInfo.front,B=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),r=e*w;for(let s=0;s<m;++s){const o=Math.max(0,Math.ceil((O-s)/p)),a=Math.min(h.outHeight,(h.inHeight+O-s)/p),i=s*I+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((B-r)/f)),u=Math.min(h.outWidth,(h.inWidth+B-r)/f),c=r*S+i;for(let i=0;i<h.inChannels;++i){const g=i*v+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*F,y=g*E;for(let g=t;g<n;++g){const t=(e+g*d-_)*D+h,n=g*T+y;for(let e=o;e<a;++e){const o=(s+e*p-O)*R+t,a=e*N+n;for(let e=l;e<u;++e){const t=e*A+a;m+=M[(r+e*f-B)*$+o+i]*x[t+c]}}}}k[g+c]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const rc={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:a,strides:i,inputShape:l}=r;Al([s],"conv3dBackpropInputV2");const u=Oe.computeStrides(s.shape),c=Oe.computeStrides(o.shape),h=zs.computeConv3DInfo(l,o.shape,i,1,a),d=new zt(h.inShape,"float32"),p=d.values,[f,g,m,y]=d.strides,b=n.data.get(s.dataId).values,[k,w,I,S]=u,v=n.data.get(o.dataId).values,[x,E,T,N]=c,{batchSize:A,filterDepth:M,filterHeight:F,filterWidth:D,inChannels:R,inDepth:$,inHeight:_,inWidth:B,outChannels:O,outDepth:P,outHeight:z,outWidth:C,strideDepth:L,strideHeight:W,strideWidth:U}=h,H=M-1-h.padInfo.front,V=F-1-h.padInfo.top,q=D-1-h.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<R;++t)for(let n=0;n<$;++n){const r=n-H,s=Math.max(0,Math.ceil(r/L)),o=Math.min(P,(M+r)/L);for(let a=0;a<_;++a){const i=a-V,l=Math.max(0,Math.ceil(i/W)),u=Math.min(z,(F+i)/W);for(let c=0;c<B;++c){const h=c-q,d=Math.max(0,Math.ceil(h/U)),A=Math.min(C,(D+h)/U);let R=0;for(let n=s;n<o;++n){const s=n*L-r;for(let r=l;r<u;++r){const o=r*W-i;for(let a=d;a<A;++a){const i=k*e+w*n+I*r+S*a,l=x*(M-1-s)+E*(F-1-o)+T*(D-1-(a*U-h))+N*t;for(let e=0;e<O;++e){R+=b[i+e]*v[l+e]}}}}p[f*e+g*n+m*a+y*c+t]=R}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},sc={kernelName:"Cos",backendName:"cpu",kernelFunc:Ml("Cos",(e=>Math.cos(e)))},oc={kernelName:"Cosh",backendName:"cpu",kernelFunc:Ml("Cosh",(e=>Math.cosh(e)))};const ac={kernelName:"CropAndResize",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=o.shape[0],[g,m]=i,y=os([f,g,m,p],"float32"),b=n.data.get(o.dataId).values,k=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,I=Oe.computeStrides(s.shape),S=Oe.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],o=b[t+3],a=k[e];if(a>=c)continue;const i=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(o-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*i:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*S[2]+t*S[1]+e*S[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),i=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+o)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*S[2]+t*S[1]+e*S[0];y.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let o=r+h*I[2]+n*I[1]+a*I[0];const u=w[o];o=r+g*I[2]+n*I[1]+a*I[0];const c=w[o];o=r+h*I[2]+s*I[1]+a*I[0];const d=w[o];o=r+g*I[2]+s*I[1]+a*I[0];const p=u+(c-u)*b,f=d+(w[o]-d)*b;o=r+l*S[2]+t*S[1]+e*S[0],y.values[o]=p+(f-p)*i}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+o)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*S[2]+t*S[1]+e*S[0];y.values[s]=u}continue}const i=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+i*I[2]+l*I[1]+a*I[0],o=r+n*S[2]+t*S[1]+e*S[0];y.values[o]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const ic={kernelName:"Cumprod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:a,reverse:i}=r;Al(s,"cumprod");const l=zs.getAxesPermutation([o],s.shape.length);let u=s;null!=l&&(u=mu({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=zs.getInnerMostAxes(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=tn(u.dtype,"int32"),d=Oe.makeOnesTypedArray(Oe.sizeFromShape(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?1:p[n];else{const r=g(e,t-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=mu({inputs:{x:m},backend:n,attrs:{perm:zs.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}};const lc={kernelName:"Cumsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:a,reverse:i}=r;Al(s,"cumsum");const l=zs.getAxesPermutation([o],s.shape.length);let u=s;null!=l&&(u=mu({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=zs.getInnerMostAxes(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=tn(u.dtype,"int32"),d=Oe.makeZerosTypedArray(Oe.sizeFromShape(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=a?0:p[n];else{const r=g(e,t-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=mu({inputs:{x:m},backend:n,attrs:{perm:zs.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}};const uc={kernelName:"DenseBincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:o}=t,{size:a,binaryOutput:i}=r;if(1===s.shape.length){const e=Cu(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,e)}if(2===s.shape.length){const e=Lu(n.bufferSync(s),n.bufferSync(o),a,i);return n.makeTensorInfo(e.shape,o.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const cc={kernelName:"DepthToSpace",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:o,dataFormat:a}=r;Oe.assert("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const i=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*o,d=u*o,p=c/(o*o),f=n.data.get(s.dataId).values,g=new Float32Array(i*h*d*p);let m=0;for(let e=0;e<i;++e)for(let t=0;t<h;++t){const n=Math.floor(t/o),r=t%o;for(let t=0;t<d;++t){const s=Math.floor(t/o),a=(r*o+t%o)*p;for(let t=0;t<p;++t){const r=t+a+c*(s+u*(n+l*e));g[m++]=f[r]}}}return n.makeTensorInfo([i,h,d,p],s.dtype,g)}};function hc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:u}=r;Al([s,o],"depthwiseConv2DNative");const c=Oe.computeStrides(s.shape),h=Oe.computeStrides(o.shape);let d=l;null==d&&(d=[1,1]),Oe.assert(zs.eitherStridesOrDilationsAreOne(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=zs.computeConv2DInfo(s.shape,o.shape,a,d,i,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:y,padInfo:b}=p,k=b.left,w=b.top,I=p.outChannels/p.inChannels,S=new zt(p.outShape,s.dtype),v=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,E=S.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*S.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*S.strides[1],s=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const o=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*S.strides[2],n=e*p.strideWidth-k;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=o+e*h[1],i=a+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=v[i+e];for(let e=0;e<I;++e)E[l+e]+=t*x[u+e];l+=I,u+=I}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const dc={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:hc};const pc={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r;Al([s,o],"depthwiseConv2dNativeBackpropFilter");const h=zs.computeConv2DInfo(s.shape,c,a,i,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new zt(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,k=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,I=new zt(s.shape,s.dtype,w),S=n.data.get(o.dataId).values,v=new zt(o.shape,o.dtype,S);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/p)),o=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/k),l=a%k;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<o;++e){const n=r+e*p-y;u+=I.get(l,t,n,i)*v.get(l,c,e,a)}}m.set(u,e,r,i,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const fc={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r;Al([s,o],"depthwiseConv2DNativeBackpropInput");const h=Oe.computeStrides(s.shape),d=Oe.computeStrides(o.shape),p=zs.computeConv2DInfo(c,o.shape,a,i,l,u,!0),f=new zt(p.inShape,"float32"),g=f.values,[m,y,b]=f.strides,k=n.data.get(s.dataId).values,[w,I,S]=h,v=n.data.get(o.dataId).values,[x,E,T]=d,{batchSize:N,filterHeight:A,filterWidth:M,inChannels:F,inHeight:D,inWidth:R,outChannels:$,outHeight:_,outWidth:B,strideHeight:O,strideWidth:P}=p,z=A-1-p.padInfo.top,C=M-1-p.padInfo.left,L=$/F;for(let e=0;e<N;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),o=Math.min(_,(A+r)/O);for(let a=0;a<R;++a){const i=a-C,l=Math.max(0,Math.ceil(i/P)),u=Math.min(B,(M+i)/P);let c=0;for(let n=s;n<o;++n){const s=n*O-r;for(let r=l;r<u;++r){const o=w*e+I*n+S*r,a=x*(A-1-s)+E*(M-1-(r*P-i))+T*t;for(let e=0;e<L;++e){c+=k[o+(t*L+e)]*v[a+e]}}}g[m*e+y*n+b*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const gc={kernelName:"Diag",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=Oe.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,a=os([s,s],r.dtype),i=a.values;for(let e=0;e<o.length;e++)i[e*s+e]=o[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}},mc={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:o,pad:a,dilations:i}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:y,outWidth:b,padInfo:k,strideHeight:w,strideWidth:I,filterHeight:S,filterWidth:v,dilationHeight:x,dilationWidth:E,outShape:T}=zs.computeDilation2DInfo(r.shape,s.shape,o,a,"NHWC",i),N=Oe.sizeFromShape(T),A=T.length,M=Oe.getArrayFromDType(r.dtype,N);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-k.top;for(let o=0;o<b;++o){const a=o*I-k.left;for(let i=0;i<m;++i){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const o=n+t*x;if(o>=0&&o<f)for(let n=0;n<v;++n){const p=a+n*E;if(p>=0&&p<g){const a=Oe.locToIndex([e,o,p,i],c,Oe.computeStrides(r.shape)),f=Oe.locToIndex([t,n,i],d,Oe.computeStrides(s.shape)),g=u[a]+h[f];g>l&&(l=g)}}}M[Oe.locToIndex([e,t,o,i],A,Oe.computeStrides(T))]=l}}}return{dataId:l.write(Oe.toTypedArray(M,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},yc={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:o}=e,{strides:a,pad:i,dilations:l}=n,u=t,c=Oe.toNestedArray(r.shape,u.data.get(r.dataId).values),h=Oe.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:k,strideWidth:w,filterHeight:I,filterWidth:S,dilationHeight:v,dilationWidth:x,outShape:E}=zs.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",l);Oe.assert(o.rank===E.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const T=Oe.toNestedArray(E,u.data.get(o.dataId).values),N=Oe.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*k-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let o=0;o<g;++o){let a=Number.MIN_SAFE_INTEGER,i=0,l=0;for(let t=0;t<I;++t){const r=n+t*v;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=s+n*x;if(u>=0&&u<f){const s=c[e][r][u][o]+h[t][n][o];s>a&&(a=s,i=t,l=n)}}}N[i][l][o]+=T[e][t][r][o]}}}return{dataId:u.write(Oe.toTypedArray(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},bc={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:o}=e,{strides:a,pad:i,dilations:l}=n,u=t,c=Oe.toNestedArray(r.shape,u.data.get(r.dataId).values),h=Oe.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:y,padInfo:b,strideHeight:k,strideWidth:w,filterHeight:I,filterWidth:S,dilationHeight:v,dilationWidth:x,outShape:E}=zs.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",l);Oe.assert(o.rank===E.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${E.length}, but got ${o.rank}`));const T=Oe.toNestedArray(E,u.data.get(o.dataId).values),N=Oe.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*k-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let o=0;o<g;++o){let a=Number.MIN_SAFE_INTEGER,i=n<0?0:n,l=s<0?0:s;for(let t=0;t<I;++t){const r=n+t*v;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=s+n*x;if(u>=0&&u<f){const s=c[e][r][u][o]+h[t][n][o];s>a&&(a=s,i=r,l=u)}}}N[e][i][l][o]+=T[e][t][r][o]}}}return{dataId:u.write(Oe.toTypedArray(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},kc=Pl(((e,t)=>e*t)),wc=ru(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Ic=nu("Multiply",kc,wc),Sc={kernelName:"Multiply",backendName:"cpu",kernelFunc:Ic};function vc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;let i;Al(s,"sum"),i="bool"===s.dtype?eu({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):$l({inputs:{x:s},backend:n});const l=i.shape.length,u=Oe.parseAxisParam(o,i.shape),c=zs.getAxesPermutation(u,l);let h=u,d=i;null!=c&&(d=mu({inputs:{x:i},backend:n,attrs:{perm:c}}),h=zs.getInnerMostAxes(h.length,l)),zs.assertAxesAreInnerMostDims("sum",h,d.shape.length);const[p,f]=zs.computeOutAndReduceShapes(d.shape,h);let g=Jl(n,p,zs.upcastType(d.dtype,"int32"));const m=Oe.sizeFromShape(f),y=n.data.get(g.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=b[t+e];y[e]=n}if(a){const e=g;g=au({inputs:{x:g},backend:n,attrs:{shape:zs.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(d),g}const xc={kernelName:"Sum",backendName:"cpu",kernelFunc:vc};const Ec={kernelName:"Einsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:a,summedDims:i,idDims:l}=zs.decodeEinsumEquation(s,o.length);zs.checkEinsumDimSizes(a.length,l,o);const{path:u,steps:c}=zs.getEinsumComputePath(i,l),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=zs.getEinsumPermutation(p,l[t]);let s;zs.isIdentityPermutation(e)?s=o[t]:(s=mu({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);Oe.arraysEqual(s.shape,a)||(s=au({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=Ic({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=vc({inputs:{x:d},backend:n,attrs:{axis:u[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};const Tc={kernelName:"EluGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;Al([r,s],"eluGrad");const o=new Float32Array(Oe.sizeFromShape(s.shape)),a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];o[e]=t>=1?i[e]:i[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},Nc=nu("Equal",Pl(((e,t)=>e===t?1:0)),null,"bool"),Ac={kernelName:"Equal",backendName:"cpu",kernelFunc:Nc},Mc=zs.ERF_P,Fc=zs.ERF_A1,Dc=zs.ERF_A2,Rc=zs.ERF_A3,$c=zs.ERF_A4,_c=zs.ERF_A5,Bc={kernelName:"Erf",backendName:"cpu",kernelFunc:Ml("Erf",(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Mc*n);return t*(1-((((_c*r+$c)*r+Rc)*r+Dc)*r+Fc)*r*Math.exp(-n*n))}))},Oc=Fl("Exp",ql((e=>Math.exp(e))),"float32"),Pc={kernelName:"Exp",backendName:"cpu",kernelFunc:Oc};function zc(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let l=o;return o<0&&(Oe.assert(-(a+1)<=o,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+o+1),i.splice(l,0,1),au({inputs:{x:s},backend:n,attrs:{shape:i}})}const Cc={kernelName:"ExpandDims",backendName:"cpu",kernelFunc:zc},Lc={kernelName:"Expm1",backendName:"cpu",kernelFunc:Fl("Expm1",ql((e=>Math.expm1(e))))},Wc=nu("RealDiv",Pl(((e,t)=>e/t))),Uc={kernelName:"RealDiv",backendName:"cpu",kernelFunc:Wc},Hc=nu("Sub",Pl(((e,t)=>e-t)),ru(((e,t,n,r)=>({real:e-n,imag:t-r})))),Vc={kernelName:"Sub",backendName:"cpu",kernelFunc:Hc};function qc(e,t,n){const r=e.shape,s=r[0],o=r[1],a=n.data.get(e.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,o],c=Oe.sizeFromShape(u),h=Oe.getTypedArrayFromDType("float32",c),d=Oe.getTypedArrayFromDType("float32",c);for(let e=0;e<s;e++){const r=Ou({inputs:{x:i},backend:n,attrs:{begin:[e,0],size:[1,o]}}),s=Ou({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,o]}}),a=Zl({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=Gc(a,t,n),p=zs.mergeRealAndImagArrays(u,c);for(let t=0;t<o;t++){const n=zs.getComplexWithIndex(p,t);h[e*o+t]=n.real,d[e*o+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=Zl({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function Gc(e,t,n){const r=Oe.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=Kc(o,a,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),o=n.makeTensorInfo([],"float32",Oe.createScalarValue(r,"float32")),a=$l({inputs:{x:o},backend:n}),l=Uc.kernelFunc({inputs:{a:e,b:o},backend:n}),u=Uc.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,a=0;for(let r=0;r<t;r++){const i=zs.exponent(s*r,t,n),l=zs.getComplexWithIndex(e,r);o+=l.real*i.real-l.imag*i.imag,a+=l.real*i.imag+l.imag*i.real}n&&(o/=t,a/=t),zs.assignToTypedArray(r,o,a,s)}return r}(zs.mergeRealAndImagArrays(o,a),r,t);return zs.splitRealAndImagArrays(e)}var i}function Kc(e,t,n,r,s){if(1===n)return{real:e,imag:t};const o=zs.mergeRealAndImagArrays(e,t),a=n/2,i=zs.complexWithEvenIndex(o),l=i.real,u=i.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=Zl({inputs:{real:h,imag:d},backend:s}),f=zs.complexWithOddIndex(o),g=f.real,m=f.imag,y=[g.length],b=s.makeTensorInfo(y,"float32",g),k=s.makeTensorInfo(y,"float32",m),w=Zl({inputs:{real:b,imag:k},backend:s}),I=Kc(l,u,a,r,s),S=I.real,v=I.imag,x=[S.length],E=s.makeTensorInfo(x,"float32",S),T=s.makeTensorInfo(x,"float32",v),N=Zl({inputs:{real:E,imag:T},backend:s}),A=Kc(g,m,a,r,s),M=A.real,F=A.imag,D=[M.length],R=s.makeTensorInfo(D,"float32",M),$=s.makeTensorInfo(D,"float32",F),_=Zl({inputs:{real:R,imag:$},backend:s}),B=zs.exponents(n,r),O=[B.real.length],P=s.makeTensorInfo(O,"float32",B.real),z=s.makeTensorInfo(O,"float32",B.imag),C=Zl({inputs:{real:P,imag:z},backend:s}),L=Ic({inputs:{a:C,b:_},backend:s}),W=su({inputs:{a:N,b:L},backend:s}),U=Hc({inputs:{a:N,b:L},backend:s}),H=Xl({inputs:{input:W},backend:s}),V=Xl({inputs:{input:U},backend:s}),q=Ku({inputs:{input:W},backend:s}),G=Ku({inputs:{input:U},backend:s}),K=Zu({inputs:[H,V],backend:s,attrs:{axis:0}}),j=Zu({inputs:[q,G],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Y=s.data.get(j.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(j),{real:Z,imag:Y}}const jc={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Oe.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],a=au({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=qc(a,!1,n),l=au({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}};function Zc(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:o}=n,a=o||Oe.inferDtype(s),i=Oe.getArrayFromDType(a,Oe.sizeFromShape(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,a,i)}const Yc={kernelName:"Fill",backendName:"cpu",kernelFunc:Zc};const Jc={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,o=Oe.getTypedArrayFromDType(r.dtype,Oe.sizeFromShape(r.shape)),[a,i,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*l*i*u;for(let e=0;e<i;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const a=Math.round(l-e-1),i=t+n+r+s;let h=c[i];if(a>=0&&a<l){h=c[t+n+a*u+s]}o[i]=h}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Xc={kernelName:"Floor",backendName:"cpu",kernelFunc:Fl("Floor",ql((e=>Math.floor(e))))},Qc={kernelName:"FloorDiv",backendName:"cpu",kernelFunc:nu("FloorDiv",Pl(((e,t)=>Math.floor(e/t))),null,"int32")};const eh={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Ju({inputs:{x:s,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=au({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=su({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=su({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=au({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=jl(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=jl(n,g,p,i,f);n.disposeIntermediateTensorInfo(e)}return g}};const th={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=hc({inputs:{x:s,filter:o},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=su({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=jl(n,g,p,i,f),n.disposeIntermediateTensorInfo(e)}return g}};function nh(e,t,n,r,s,o,a,i,l){const u=os([r,o],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const o=e[n*s+t];c+=o*a[t],r.push(o)}if(c<0||c>=l/o)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<o;e++)u.values[n*o+e]=t.get(...t.indexToLoc(c*o+e))}return u}const rh={kernelName:"GatherNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=Oe.sizeFromShape(r.shape),a=s.shape,i=a[a.length-1],[l,u,c,h]=zs.prepareAndValidate(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=nh(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,d.values)}};function sh(e,t,n){const r=os(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),o=s[0],a=s[2],i=t.locToIndex([o,a]);s[2]=t.values[i];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const oh={kernelName:"GatherV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:a,batchDims:i}=r;Al([s,o],"gatherV2");const l=Oe.parseAxisParam(a,s.shape)[0],u=n.data.get(o.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];Oe.assert(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=i;null==i&&(h=0);const d=Oe.sizeFromShape(o.shape),p=zs.segment_util.collectGatherOpShapeInfo(s,o,l,h),f=au({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=au({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(g),b=sh(n.bufferSync(f),y,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},ah={kernelName:"Greater",backendName:"cpu",kernelFunc:nu("Greater",Pl(((e,t)=>e>t?1:0)),null,"bool")},ih={kernelName:"GreaterEqual",backendName:"cpu",kernelFunc:nu("GreaterEqual",Pl(((e,t)=>e>=t?1:0)),null,"bool")};const lh={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Oe.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],a=au({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=qc(a,!0,n),l=au({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}},uh={kernelName:"IsFinite",backendName:"cpu",kernelFunc:Ml("IsFinite",(e=>Number.isFinite(e)?1:0),"bool")},ch={kernelName:"IsInf",backendName:"cpu",kernelFunc:Ml("IsInf",(e=>Math.abs(e)===1/0?1:0),"bool")},hh={kernelName:"IsNan",backendName:"cpu",kernelFunc:Ml("IsNan",(e=>Number.isNaN(e)?1:0),"bool")},dh={kernelName:"Less",backendName:"cpu",kernelFunc:nu("Less",Pl(((e,t)=>e<t?1:0)),null,"bool")},ph={kernelName:"LessEqual",backendName:"cpu",kernelFunc:nu("LessEqual",Pl(((e,t)=>e<=t?1:0)),null,"bool")};function fh(e,t,n){const r=(t-e)/(n-1),s=Oe.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const gh={kernelName:"LinSpace",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:o}=n,a=fh(r,s,o);return t.makeTensorInfo([a.length],"float32",a)}},mh={kernelName:"Log",backendName:"cpu",kernelFunc:Fl("Log",ql((e=>Math.log(e))))},yh={kernelName:"Log1p",backendName:"cpu",kernelFunc:Ml("Log1p",(e=>Math.log1p(e)))},bh={kernelName:"LogicalAnd",backendName:"cpu",kernelFunc:nu("LogicalAnd",Pl(((e,t)=>e&&t)),null,"bool")},kh={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:Ml("LogicalNot",(e=>e?0:1),"bool")},wh={kernelName:"LogicalOr",backendName:"cpu",kernelFunc:nu("LogicalOr",Pl(((e,t)=>e||t)),null,"bool")};const Ih={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=r;Al(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=Oe.sizeFromShape(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+i*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}};const Sh={kernelName:"LRNGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r;Al(a,"LRNGrad");const h=Oe.sizeFromShape(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(o.dataId).values,m=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-i),r=e-t+Math.min(d,t+i+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(a.shape,s.dtype,m)}};function vh(e,t,n,r){const s=Oe.getTypedArrayFromDType(r,Oe.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let o=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>o)&&(o=t)}s[n]=o}return s}function xh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:a}=r,i=n;let l=s.shape;const u=l.length,c=Oe.parseAxisParam(o,l);let h=c;const d=zs.getAxesPermutation(h,u);let p=i.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=gu(p,l,s.dtype,d,e),h=zs.getInnerMostAxes(h.length,u),l=e}Al(s,"max"),zs.assertAxesAreInnerMostDims("max",h,u);const[f,g]=zs.computeOutAndReduceShapes(l,h),m=vh(p,Oe.sizeFromShape(g),f,s.dtype),y=i.write(m,f,s.dtype);let b=f;if(a){b=zs.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const Eh={kernelName:"Max",backendName:"cpu",kernelFunc:xh},Th={kernelName:"Maximum",backendName:"cpu",kernelFunc:nu("Maximum",Pl(((e,t)=>Math.max(e,t))))};const Nh={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Al(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=r;Oe.assert(zs.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const u=zs.computePool2DInfo(s.shape,o,a,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&Oe.arraysEqual(u.inShape,u.outShape))c=$l({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Oe.computeStrides(s.shape),r=Nu(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}};const Ah={kernelName:"MaxPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:u}=r;Al(s,"maxPool3d");const c=zs.computePool3DInfo(s.shape,o,a,1,i,l,u),h=Mu(n.data.get(s.dataId).values,s.shape,s.dtype,Oe.computeStrides(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Mh={kernelName:"MaxPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:u}=r;Al([s,o],"maxPool3DGrad");const c=zs.computePool3DInfo(o.shape,a,i,1,l,u),h=Fu(n.bufferSync(o),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,k=c.effectiveFilterHeight,w=c.effectiveFilterWidth,I=b-1-c.padInfo.front,S=w-1-c.padInfo.left,v=k-1-c.padInfo.top,x=os(o.shape,"float32"),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const o=n-I,a=r-v,i=s-S;let l=0;for(let n=0;n<b;n+=g){const r=(o+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<k;s+=m){const o=(a+s)/p;if(!(o<0||o>=c.outHeight||Math.floor(o)!==o))for(let a=0;a<w;a+=y){const u=(i+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=b*k*w-1-h.get(e,r,o,u,t)===n*k*w+s*w+a?1:0;if(0===d)continue;l+=E.get(e,r,o,u,t)*d}}}x.set(l,e,n,r,s,t)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Fh={kernelName:"MaxPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:a}=t,i=o;Al([o,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=zs.computePool2DInfo(i.shape,l,u,1,c,h),p=n.data.get(i.dataId).values,f=os(d.outShape,i.dtype,Au(p,i.shape,i.dtype,d).values),g=d.strideHeight,m=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,k=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,S=k-1-d.padInfo.top,v=os(i.shape,"float32"),x=n.data.get(s.dataId).values,E=os(s.shape,"float32",x);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-S,o=r-I;let a=0;for(let n=0;n<k;n+=y){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const i=(o+s)/m;if(i<0||i>=d.outWidth||Math.floor(i)!==i)continue;const l=k*w-1-f.get(e,r,i,t)===n*w+s?1:0;if(0===l)continue;a+=E.get(e,r,i,t)*l}}v.set(a,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};function Dh(e,t,n,r,s){const o=Nu(e,0,n,Oe.computeStrides(t),s,"max"),a=Au(e,t,n,s,!0,r);return[o.values,a.values]}const Rh={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=t,l=n;Al(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=zs.computePool2DInfo(r.shape,s,o,[1,1],a),[h,d]=Dh(u,r.shape,r.dtype,i,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const $h={kernelName:"Mean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r,i=Oe.parseAxisParam(o,s.shape),l=zs.computeOutAndReduceShapes(s.shape,i)[1],u=Oe.sizeFromShape(l),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(h);const d=eu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=Wc({inputs:{a:d,b:h},backend:n});c.push(p);const f=vc({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:a}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const _h={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;Al(s,"min");const i=Oe.parseAxisParam(o,s.shape);let l=i;const u=zs.getAxesPermutation(l,s.shape.length);let c=s;null!=u&&(c=mu({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zs.getInnerMostAxes(l.length,s.shape.length)),zs.assertAxesAreInnerMostDims("min",l,c.shape.length);const[h,d]=zs.computeOutAndReduceShapes(c.shape,l),p=Oe.sizeFromShape(d),f=Oe.makeZerosTypedArray(Oe.sizeFromShape(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=au({inputs:{x:m},backend:n,attrs:{shape:zs.expandShapeToKeepDim(h,i)}});return n.disposeIntermediateTensorInfo(m),e}return m}},Bh={kernelName:"Minimum",backendName:"cpu",kernelFunc:nu("Minimum",Pl(((e,t)=>Math.min(e,t))))};const Oh={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,mode:a}=r;Al(s,"mirrorPad");const i=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=o.map((e=>e[0])),u=o.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Oe.computeStrides(s.shape),f=Oe.sizeFromShape(i),g=i.length,m=Oe.computeStrides(i),y=Oe.getTypedArrayFromDType(s.dtype,f);for(let e=0;e<f;e++){let t=Oe.indexToLoc(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Oe.locToIndex(t,d,p);y[e]=h[n]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},Ph={kernelName:"Mod",backendName:"cpu",kernelFunc:nu("Mod",Pl(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})))};function zh(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,a=s.shape.length;let i=o;if(-1===i&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=Oe.parseAxisParam([i],s.shape),u=xh({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=zs.expandShapeToKeepDim(u.shape,l),h=au({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Hc({inputs:{a:s,b:h},backend:n}),p=Oc({inputs:{x:d},backend:n}),f=vc({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=au({inputs:{x:f},backend:n,attrs:{shape:c}}),m=Wc({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const Ch={kernelName:"Softmax",backendName:"cpu",kernelFunc:zh};const Lh={kernelName:"Multinomial",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:o,seed:a,normalized:i}=r;Al(s,"multinomial");const l=i?s:zh({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,o],p=Oe.makeZerosTypedArray(Oe.sizeFromShape(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=bl.alea(a.toString()),s=e*o;for(let e=0;e<o;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};const Wh={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Al(r,"neg");const s=n.data.get(r.dataId).values,[o,a]=function(e,t,n){const r=Oe.createScalarValue(-1,n);return kc([],t,r,e,n)}(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,o)}},Uh=ja.nonMaxSuppressionV3Impl;const Hh={kernelName:"NonMaxSuppressionV3",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=r;Al(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,{selectedIndices:h}=Uh(u,c,a,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Vh=ja.nonMaxSuppressionV4Impl;const qh={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r;Al(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=Vh(c,h,a,i,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Gh=ja.nonMaxSuppressionV5Impl;const Kh={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r;Al(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=a,p=i,f=l,g=u,{selectedIndices:m,selectedScores:y}=Gh(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},jh={kernelName:"NotEqual",backendName:"cpu",kernelFunc:nu("NotEqual",Pl(((e,t)=>e!==t?1:0)),null,"bool")};const Zh={kernelName:"OneHot",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:o,depth:a,onValue:i,offValue:l}=r;Al(s,"oneHot");const u=Oe.sizeFromShape(s.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<a&&(c[e*a+h[e]]=i);return n.makeTensorInfo([...s.shape,a],o,c)}};function Yh(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Xl({inputs:{input:r},backend:n}),t=Yh({inputs:{x:e},backend:n}),s=Ku({inputs:{input:r},backend:n}),o=Yh({inputs:{x:s},backend:n}),a=Zl({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),a}return Zc({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Jh={kernelName:"ZerosLike",backendName:"cpu",kernelFunc:Yh};const Xh={kernelName:"OnesLike",backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=Xl({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),o=Ku({inputs:{input:s},backend:r}),a=Yh({inputs:{x:o},backend:r}),i=Zl({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}return Zc({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Qh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return zc({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,a=t[0].dtype;t.forEach((e=>{Oe.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),Oe.assert(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=Zu({inputs:t.map((e=>{const t=zc({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const ed={kernelName:"Pack",backendName:"cpu",kernelFunc:Qh};const td={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:a}=r;Al(s,"pad");const i=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=o.map((e=>e[0])),u=n.data.get(s.dataId).values,c=Oe.sizeFromShape(s.shape),h=s.shape.length,d=Oe.computeStrides(s.shape),p=Oe.sizeFromShape(i),f=i.length,g=Oe.computeStrides(i),m=Oe.getTypedArrayFromDType(s.dtype,p);0!==a&&m.fill(a);for(let e=0;e<c;e++){const t=Oe.indexToLoc(e,h,d).map(((e,t)=>e+l[t]));m[Oe.locToIndex(t,f,g)]=u[e]}return{dataId:n.write(m,i,s.dtype),shape:i,dtype:s.dtype}}},nd={kernelName:"Pow",backendName:"cpu",kernelFunc:nu("Pow",Pl(((e,t)=>Math.pow(e,t))))};const rd={kernelName:"Prod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;Al(s,"prod");const i=s.shape.length,l=Oe.parseAxisParam(o,s.shape),u=zs.getAxesPermutation(l,i);let c=l,h=s;const d=[];null!=u&&(h=mu({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=zs.getInnerMostAxes(c.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=function(e,t,n,r){const[s,o]=zs.computeOutAndReduceShapes(e,r),a=tn(t,"int32"),i=Oe.makeZerosTypedArray(Oe.sizeFromShape(s),a),l=Oe.sizeFromShape(o);for(let e=0;e<i.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:a}}(h.shape,h.dtype,p,c);let y=g;return a&&(y=zs.expandShapeToKeepDim(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,m,f)}};var sd=zs.RowPartitionType;class od{constructor(e,t,n,r,s,o,a,i,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=i,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=zs.getRowPartitionTypesHelper(u),this.raggedRank=zs.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===sd.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===sd.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case sd.VALUE_ROWIDS:return od.getMaxWidthValueRowID(t);case sd.ROW_SPLITS:return od.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${sd[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let o=1;o<t;++o){const t=e[o];t!==r&&(r=t,s=Math.max(o-n,s),n=o)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return id(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;zs.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=zs.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let e=1;e<=this.raggedRank;++e)s[e]<0&&(s[e]=this.getMaxWidth(e));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let o=0;for(let e=0;e<r;++e,o+=t)s.push(o);for(let t=r;t<e;++t)s.push(-1);return Oe.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,o=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let i=Math.min(r,s),l=t[a];-1===l&&(i=0);for(let e=0;e<i;++e)o.push(l),l+=n;for(let e=0;e<s-i;++e)o.push(-1)}if(s>0&&o.length!==e[s-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,o=[];if(0===s)return[];let a=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let l=t[i];o.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===i)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,i=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}o.push(l)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case sd.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case sd.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${sd[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case sd.FIRST_DIM_SIZE:return e[0];case sd.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sd.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sd[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=id(t,!1),s=Oe.getArrayFromDType(this.valuesDType,Oe.sizeFromShape(r));if(n[0]*t[0]>0){let o=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){o=this.calculateOutputIndex(e-1,o,n[e],t[e])}this.setOutput(this.raggedRank,o,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,o=n;let a=r.slice();a=a.slice(e+1);const i=Oe.sizeFromShape(a),l=t.length;let u=this.defaultValue;if(u.length!==i&&1!==u.length){const e=this.defaultValueShape;Yi((()=>{const t=No(u,e),n=$i(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*i);ad(o.subarray(h*i),e,(d-h)*i)}if(e>=l){const e=n.length;r=Math.floor(e/i)}if(r>d)if(1===this.defaultValue.length)o.subarray(d*i,r*i).fill(this.defaultValue[0]),d=r;else for(;r>d;){ad(o.slice(d*i),u,i),++d}r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function ad(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function id(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function ld(e,t,n,r,s,o,a,i,l,u){return new od(e,t,n,r,s,o,a,i,l,u).compute()}const ud={kernelName:"RaggedTensorToTensor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,h=n.data.get(a.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,g]=ld(u,s.shape,c,o.shape,o.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,o.dtype,g)}};function cd(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Oe.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),o=Oe.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}const hd={kernelName:"Range",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:o,step:a}=n,i=cd(r,s,a,o);return t.makeTensorInfo([i.length],o,i)}},dd={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:Ml("Reciprocal",(e=>1/e))};const pd={kernelName:"ResizeBilinear",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:a,size:i}=r;Al(s,"resizeBilinear");const l=Oe.computeStrides(s.shape),[u,c]=i,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(Oe.sizeFromShape([h,u,c,f])),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],b=[o&&u>1?u-1:u,o&&c>1?c-1:c];let k=0;const w=y[0]/b[0],I=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=a?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,o=Math.min(d-1,Math.ceil(n)),i=e*l[0]+r*l[1],u=e*l[0]+o*l[1];for(let e=0;e<c;e++){let t;t=a?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],h=u+n*l[2],d=i+o*l[2],y=u+o*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],o=t+(g[d+e]-t)*r,a=o+(n+(g[y+e]-n)*r-o)*s;m[k++]=a}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}};const fd={kernelName:"ResizeBilinearGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:a}=r;Al([o,s],"resizeBilinearGrad");const i=Oe.computeStrides(s.shape),[l,u,c,h]=s.shape,[,d,p]=o.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],y=g[0]/m[0],b=g[1]/m[1],k=n.data.get(o.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*i[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),o=t+r*i[1],a=t+s*i[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=o+n*i[2],g=o+r*i[2],m=a+n*i[2],y=a+r*i[2],I=d*u,S=d*s,v=l*u,x=l*s;for(let e=0;e<h;e++){const t=k[w++];f[p+e]+=t*I,f[g+e]+=t*S,f[m+e]+=t*v,f[y+e]+=t*x}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}};const gd={kernelName:"ResizeNearestNeighbor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:a,size:i}=r;Al(s,"resizeNearestNeighbor");const l=Oe.computeStrides(s.shape),[u,c]=i,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),y=[o&&u>1?d-1:d,o&&c>1?p-1:p],b=[o&&u>1?u-1:u,o&&c>1?c-1:c],k=y[0]/b[0],w=y[1]/b[1];let I=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=a?k*(e+.5):k*e;let r=Math.min(d-1,o?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=a?w*(e+.5):w*e;let n=Math.min(p-1,o?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[I++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}};const md={kernelName:"ResizeNearestNeighborGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:a}=r;Al([o,s],"resizeNearestNeighborGrad");const i=Oe.computeStrides(s.shape),l=Oe.computeStrides(o.shape),[u,c,h,d]=s.shape,[,p,f]=o.shape,g=new Float32Array(u*c*h*d),m=n.data.get(o.dataId).values,y=[a&&p>1?c-1:c,a&&f>1?h-1:h],b=[a&&p>1?p-1:p,a&&f>1?f-1:f],k=y[0]/b[0],w=y[1]/b[1],I=1/k,S=1/w,v=2*Math.ceil(I)+2,x=2*Math.ceil(S)+2;for(let e=0;e<u;e++){const t=e*i[0];for(let e=0;e<c;e++){const n=t+e*i[1],r=Math.floor(e*I),s=Math.floor(r-v/2);for(let r=0;r<h;r++){const o=n+r*i[2],u=Math.floor(r*S),y=Math.floor(u-x/2);for(let n=0;n<d;n++){let i=0;for(let o=0;o<v;o++){const u=o+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*k;if(e===Math.min(c-1,a?Math.round(g):Math.floor(g)))for(let e=0;e<x;e++){const t=e+y;if(t<0||t>=f)continue;const s=d+t*l[2],o=t*w;r===Math.min(h-1,a?Math.round(o):Math.floor(o))&&(i+=m[s+n])}}g[o+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};const yd={kernelName:"Reverse",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r;Al(s,"reverse");const a=s.shape.length,i=Oe.parseAxisParam(o,s.shape);if(0===a)return $l({inputs:{x:s},backend:n});const l=new zt(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();i.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},bd={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:o,center:a}=t,i=n,l=Oe.getTypedArrayFromDType(r.dtype,Oe.sizeFromShape(r.shape)),[u,c,h,d]=r.shape,[p,f]=zs.getImageCenter(a,c,h),g=Math.sin(s),m=Math.cos(s),y=i.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const i=[u,e,r,a],b=i[2],k=i[1];let w=(b-p)*m-(k-f)*g,I=(b-p)*g+(k-f)*m;w=Math.round(w+p),I=Math.round(I+f);let S=o;if("number"!=typeof o&&(S=3===a?255:o[a]),w>=0&&w<h&&I>=0&&I<c){S=y[t+I*(h*d)+w*d+a]}l[t+n+s+a]=S}}}}return{dataId:i.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},kd={kernelName:"Round",backendName:"cpu",kernelFunc:Ml("Round",(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}))},wd={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:Fl("Rsqrt",ql((e=>1/Math.sqrt(e))))};function Id(e,t,n,r,s,o,a,i,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return os(n,t.dtype);const p=os(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<o;e++){const o=[];let l=0;for(let t=0;t<a;t++){const n=h[e*a+t];o.push(n),l+=n*i[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${o} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const Sd={kernelName:"ScatterNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:a}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=zs.calculateShapes(o,s,a),d=Id(n.bufferSync(s),n.bufferSync(o),a,h,u,l,i,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function vd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function xd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function Ed(e,t,n,r,s,o){const a=Oe.getArrayFromDType("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),l=i*s;for(let e=0;e<s;++e)a[l+e]="left"===o?vd(n,t[e+l]):xd(n,t[e+l])}return a}const Td={kernelName:"SearchSorted",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:o}=t,{side:a}=r,i=Ed(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],a);return n.makeTensorInfo(o.shape,"int32",i)}};const Nd={kernelName:"Select",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t;Al([r,s,o],"select");const a=r.shape.length,i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,c=tn(s.dtype,o.dtype),h=Oe.makeZerosTypedArray(Oe.sizeFromShape(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:Oe.sizeFromShape(s.shape.slice(1));for(let e=0;e<i.length;e++)for(let t=0;t<p;t++)1===i[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},Ad=zs.SELU_SCALEALPHA,Md=zs.SELU_SCALE,Fd={kernelName:"Selu",backendName:"cpu",kernelFunc:Ml("Selu",(e=>e>=0?Md*e:Ad*(Math.exp(e)-1)))},Dd={kernelName:"Sign",backendName:"cpu",kernelFunc:Ml("Sign",(e=>e<0?-1:e>0?1:0))},Rd={kernelName:"Sin",backendName:"cpu",kernelFunc:Ml("Sin",(e=>Math.sin(e)))},$d={kernelName:"Sinh",backendName:"cpu",kernelFunc:Ml("Sinh",(e=>Math.sinh(e)))},_d=Math.log(1.1920928955078125e-7)+2,Bd={kernelName:"Softplus",backendName:"cpu",kernelFunc:Ml("Softplus",(e=>{const t=e>-_d,n=e<_d,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}))};const Od={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:a}=r;Al([s],"spaceToBatchND");const i=Oe.sizeFromShape(o),l=[[0,0]];l.push(...a);for(let e=1+o.length;e<s.shape.length;++e)l.push([0,0]);const u=td.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=zs.getReshaped(u.shape,o,i,!1),h=zs.getPermuted(c.length,o.length,!1),d=zs.getReshapedPermuted(u.shape,o,i,!1),p=au({inputs:{x:u},backend:n,attrs:{shape:c}}),f=mu({inputs:{x:p},backend:n,attrs:{perm:h}}),g=au({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function Pd(e,t,n,r,s,o,a){const i=t[0],l=o[0],u=new Array(l),c=new Array(i),h=t[1];if(0===l){if(0!==i)throw new Error(zs.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));return[Oe.getArrayFromDType(n,0),[0,h],Oe.getArrayFromDType(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<i;++t){const n=e[t*h];if(n<0)throw new Error(zs.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(zs.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,h],n,u,c]}{const t=f[l-1],o=Oe.getArrayFromDType(n,t*h),d=Oe.getArrayFromDType(s,t),p=new Array(l).fill(0);for(let t=0;t<i;++t){const n=e[t*h],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)o[a*h+n]=e[t*h+n];d[a]=r[t],c[t]=a}for(let e=0;e<l;++e){if(0===p[e]){const t=0===e?0:f[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;d[t]=a}}return[o,[t,h],d,u,c]}}const zd={kernelName:"SparseFillEmptyRows",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:o,defaultValue:a}=t;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=Pd(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function Cd(e,t,n,r,s){const o=Oe.sizeFromShape(r),a=t[0],i=s.length,l=[];let u=1,c=-1;for(let e=0;e<i;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(zs.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(zs.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error(zs.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/u);if(u*e!==o)throw new Error(zs.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[c]=e}if(Oe.sizeFromShape(l)!==o)throw new Error(zs.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=Oe.getArrayFromDType(n,a*i);for(let t=0;t<a;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[a,i],l]}const Ld={kernelName:"SparseReshape",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:o}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(o.dataId).values),[u,c,h]=Cd(i,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};function Wd(e,t,n,r,s,o=!1,a=0){const i=r.length,l=[t[0],e.length/t[0]],u=l[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error(zs.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=Oe.getArrayFromDType(n,d);if(0===i)return c>0&&p.fill(a),[p,h];if(c<=0)throw new Error(zs.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,g=1,m=0,y=s[f];for(;;){let t=0;if(g<i){if(t=s[g],y===t){++g;continue}if(y>=t)throw new Error(zs.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(zs.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>m&&p.fill(a,m*u,y*u);for(let t=f;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(zs.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)p[y*u+t]+=e[n*u+t]}if(o)for(let e=0;e<u;e++)p[y*u+e]/=g-f;if(f=g,++g,m=y+1,y=t,g>i)break}return m<c&&p.fill(a,m*u,c*u),[p,h]}const Ud={kernelName:"SparseSegmentMean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,[u,c]=Wd(a,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const Hd={kernelName:"SparseSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,[u,c]=Wd(a,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}};const Vd={kernelName:"SparseToDense",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:a}=t,{outputShape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=zs.calculateShapes(o,s,i),p=!1,f=n.bufferSync(s);let g;switch(o.dtype){case"bool":g=Id(f,n.bufferSync(o),i,d,c,u,l,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":g=Id(f,n.bufferSync(o),i,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"int32":g=Id(f,n.bufferSync(o),i,d,c,u,l,h,n.data.get(a.dataId).values[0],p);break;case"string":g=Id(f,n.bufferSync(o),i,d,c,u,l,h,Oe.decodeString(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(i,g.dtype,g.values)}};const qd={kernelName:"SplitV",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:a}=r,i=Oe.parseAxisParam(a,s.shape)[0],l=zs.prepareSplitSize(s,o,i),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[i]=e;const r=Ou({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,r}))}},Gd=(ql((e=>Math.sqrt(e))),{kernelName:"Sqrt",backendName:"cpu",kernelFunc:Ml("Sqrt",(e=>Math.sqrt(e)))}),Kd={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Al(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];o[e]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},jd={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:nu("SquaredDifference",Pl(((e,t)=>{const n=e-t;return n*n})))},Zd={kernelName:"Step",backendName:"cpu",kernelFunc:Ml("Step",((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}))};function Yd(e,t,n,r){const s=os(e,t.dtype);for(let e=0;e<s.size;e++){const o=s.indexToLoc(e),a=new Array(o.length);for(let e=0;e<a.length;e++)a[e]=o[e]*n[e]+r[e];s.set(t.get(...a),...o)}return s}const Jd={kernelName:"StridedSlice",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;Al(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:y,begin:b,end:k,strides:w}=ws.sliceInfo(s.shape,o,a,i,l,u,c,h,d);let I;if(g)I=au({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||y){Oe.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ws.computeOutShape(b,k,w),t=Ou({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});I=au({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Yd(p,n.bufferSync(s),w,b);I=n.makeTensorInfo(f,e.dtype,e.values)}return I}};class Xd{constructor(e,t,n,r,s,o){this.separator=Oe.encodeString(e),this.nGramWidths=t,this.leftPad=Oe.encodeString(n),this.rightPad=Oe.encodeString(r),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,o){for(let a=0;a<s;++a){const i=this.getPadWidth(o),l=Math.max(0,i-a),u=Math.max(0,i-(s-(a+1))),c=o-(l+u),h=t+(l>0?0:a-i);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;d+=(l+u+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,o=Oe.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const a=new Array(o[s]);for(let n=0;n<s;++n){const r=t[n];let s=o[n];if(this.nGramWidths.forEach((o=>{const i=t[n+1]-t[n],l=this.getNumNGrams(i,o);this.createNGrams(e,r,a,s,l,o),s+=l})),this.preserveShort&&s===o[n]){const o=t[n+1]-t[n];if(0===o)continue;const i=o+2*this.padWidth,l=1;this.createNGrams(e,r,a,s,l,i)}}return[a,o]}}function Qd(e,t,n,r,s,o,a,i){return new Xd(n,r,s,o,a,i).compute(e,t)}const ep={kernelName:"StringNGrams",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=Qd(d,p,s,o,a,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function tp(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let o=e.indexOf(s);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||r.push(t),o=(e=e.subarray(o+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(s,o);n&&0===t.length||r.push(t),s=o+1}}function np(e,t,n){const r=e.length,s=[];let o=0,a=0;const i=new Array(r);for(let l=0;l<r;++l){const r=s.length;tp(e[l],t,n,s);const u=s.length-r;i[l]=u,o+=u,a=Math.max(a,u)}const l=Oe.getArrayFromDType("int32",2*o),u=new Array(o),c=[r,a];let h=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const rp={kernelName:"StringSplit",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:o,delimiter:a}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.data.get(o.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=np(i,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function sp(e,t){const n=Oe.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Oe.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const op={kernelName:"StringToHashBucketFast",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=sp(n.data.get(o.dataId).values,s);return n.makeTensorInfo(o.shape,"int32",a)}},ap={kernelName:"Tan",backendName:"cpu",kernelFunc:Ml("Tan",(e=>Math.tan(e)))},ip=Ml("Tanh",(e=>Math.tanh(e)));function lp(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=os(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const o=e.locToIndex(s);r.values[t]=e.values[o]}return r}const up=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function cp(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,o=t-n+1,a=Math.log(s),i=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*i*(s-i)/s)*Math.sign(o-s/2);cp(e,t,Math.max(n,Math.floor(t-o*i/s+l)),Math.min(r,Math.floor(t+(s-o)*i/s+l)))}const s=e[t];let o=n,a=r;for(Oe.swap(e,n,t),up(e[r],s)>0&&Oe.swap(e,n,r);o<a;){for(Oe.swap(e,o,a),o++,a--;up(e[o],s)<0;)o+=1;for(;up(e[a],s)>0;)a-=1}0===up(e[n],s)?Oe.swap(e,n,a):(a+=1,Oe.swap(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function hp(e,t,n,r,s){const o=t[t.length-1],[a,i]=[e.length/o,o],l=Oe.getTypedArrayFromDType(n,a*r),u=Oe.getTypedArrayFromDType("int32",a*r);for(let t=0;t<a;t++){const n=t*i,o=e.subarray(n,n+i);let a=new Array(o.length);o.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(cp(a,r),a=a.slice(0,r)),s&&a.sort(up);const c=t*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[os(c,n,l),os(c,"int32",u)]}function dp(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Oe.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Oe.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Oe.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function pp(e,t,n,r,s,o,a,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<n?e[a*r+i*s+l*o+u]:c}function fp(e,t,n,r,s,o,a,i,l,u,c){return pp(e,t,n,r,s,o,a,Math.round(i),Math.round(l),u,c)}function gp(e,t,n,r,s,o,a,i,l,u,c){const h=Math.floor(i),d=Math.floor(l),p=h+1,f=d+1;return(p-i)*((f-l)*pp(e,t,n,r,s,o,a,h,d,u,c)+(l-d)*pp(e,t,n,r,s,o,a,h,f,u,c))+(i-h)*((f-l)*pp(e,t,n,r,s,o,a,p,d,u,c)+(l-d)*pp(e,t,n,r,s,o,a,p,f,u,c))}function mp(e,t,n,r){const s=Oe.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const a={},i=new Int32Array(n[s]),l=new zt(o,r,e),u=[],c=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==a[n])i[t]=a[n];else{const e=Object.keys(a).length;a[n]=e,i[t]=e,u.push(t)}}const h=o.slice();h[1]=Object.keys(a).length;const d=new zt(h,r);u.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const yp=[cu,hu,du,pu,ou,fu,bu,ku,wu,Iu,Su,vu,xu,Eu,Tu,Du,Ru,$u,_u,uu,Bu,zu,Wu,Uu,tu,Hu,Vu,Yl,qu,Yu,Xu,Qu,ec,tc,nc,rc,sc,oc,ac,ic,lc,uc,cc,dc,pc,fc,gc,mc,yc,bc,Ec,Rl,Tc,Ac,Bc,Pc,Cc,Lc,jc,Yc,Jc,Xc,Qc,eh,th,rh,oh,ah,ih,_l,lh,ju,uh,ch,hh,Ol,dh,ph,gh,mh,yh,bh,kh,wh,Ih,Sh,Eh,Th,Nh,Ah,Mh,Fh,Rh,$h,_h,Bh,Oh,Ph,Lh,Sc,Wh,Hh,qh,Kh,jh,Zh,Xh,ed,td,nd,Ll,rd,ud,hd,Ql,Uc,dd,Ul,Vl,iu,pd,fd,gd,md,yd,bd,kd,wd,Sd,Td,Nd,Fd,Kl,Dd,Rd,$d,Pu,Ch,Bd,Od,zd,Ld,Ud,Hd,Vd,qd,Gd,Kd,jd,Zd,Jd,ep,rp,op,Vc,xc,ap,{kernelName:"Tanh",backendName:"cpu",kernelFunc:ip},{kernelName:"Tile",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;Al(s,"tile");const a=lp(n.bufferSync(s),o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:"TopK",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:a}=r;Al(s,"topk");const i=n.data.get(s.dataId).values,[l,u]=hp(i,s.shape,s.dtype,o,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},{kernelName:"Transform",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],y=Oe.computeStrides(s.shape),b=y[0],k=y[1],w=y[2],I=Oe.computeStrides(m),S=I[0],v=I[1],x=I[2],E=Oe.getTypedArrayFromDType(s.dtype,Oe.sizeFromShape(m));E.fill(l);const T=r.data.get(s.dataId).values,N=r.data.get(o.dataId).values;for(let e=0;e<c;++e){const t=1===o.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<g;++r)for(let s=0;s<p;++s){let o;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=dp(c,d,i),g=dp(p,h,i);switch(a){case"nearest":o=fp(T,h,d,b,k,w,e,g,f,s,l);break;case"bilinear":o=gp(T,h,d,b,k,w,e,g,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}E[e*S+n*v+r*x+s]=o}return r.makeTensorInfo(m,s.dtype,E)}return{dataId:r.write(E,m,s.dtype),shape:s.shape,dtype:s.dtype}}},yu,{kernelName:"Unique",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;Al(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:l,indices:u}=mp(a,s,o.shape,o.dtype);return[r.makeTensorInfo(l,o.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:"Unpack",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],l=new Array(a-1);let u=0;for(let e=0;e<a;e++)e!==o&&(l[u++]=s.shape[e]);const c=new Array(a).fill(0),h=s.shape.slice();h[o]=1;const d=new Array(i);for(let e=0;e<d.length;e++){c[o]=e;const t=Ou({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=au({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:"UnsortedSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:a}=r;Al(s,"unsortedSegmentSum");const i=[],l=[],u=s.shape.length-o.shape.length;let c=o;for(let e=0;e<u;++e){const t=zc({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<a;++e){const t=Oe.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),o=Nc({inputs:{a:r,b:c},backend:n}),a=eu({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),u=Ic({inputs:{a:a,b:s},backend:n}),h=vc({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});i.push(h),l.push(r),l.push(o),l.push(a),l.push(u),l.push(h)}const h=Qh({inputs:i,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Jh];for(const e of yp)_e(e);const bp=ja.whereImpl;class kp extends i{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a(this,Zi())}nextDataId(){return kp.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ae().get("IS_NODE")&&zs.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Oe.isString(n[0])){const s=n.map((e=>Oe.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return zs.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Oe.decodeString(e)));return os(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return os(e.shape,e.dtype,t)}makeOutput(e,t,n){return Zi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Oe.now();e();return{kernelMs:Oe.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Al([e],"where");const t=this.readSync(e.dataId);return bp(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}kp.nextDataId=0,function(e,t,n=1){cn.registerBackend(e,t,n)}("cpu",(()=>new kp),1);var wp=function(e){var t=e.document,n=e.window,r=t.createElement("canvas"),s=r.getContext("2d"),o=0;r.width=707,r.height=606,t.body.appendChild(r),e.ctx=s;let a=[500,500];const i=15;let l;function u(){var e=Date.now();e-o>20&&(!function(){s.beginPath(),s.clearRect(0,0,a[0],a[1]),s.strokeRect(0,0,a[0],a[1]);let e=Fo(l.pos,0);e=Di(e,l.pos),e=vo(e,1/14),e=Di(e,l.pos);let t=yl(e,500);l.vel=Ai(l.vel,t);let n=Fo(l.vel,0);n=Di(n,l.vel),n=yl(n,1400),l.vel=Ai(l.vel,n);let r,o=ci([i,i,2]);o=Ai(o,l.pos),o=Di(tl(o,[1,0,2]),o),r=Hi(o,2),r=Fo(r,2),r=yl(1,r),o=tl(vo(tl(o),tl(r))),o=Fo(o,1),l.vel=Ai(l.vel,o);let u=l.pos.bufferSync(),c=Ai(l.pos,vo(l.vel,15)).bufferSync();for(var h=0;h<i;++h)s.beginPath(),s.arc(u.get(h,0),u.get(h,1),l.size,0,2*Math.PI),s.moveTo(u.get(h,0),u.get(h,1)),s.lineTo(c.get(h,0),c.get(h,1)),s.stroke();l.pos=Ai(l.pos,l.vel)}(),o=e),n.requestAnimationFrame(u)}!function(){console.log("init"),console.log("init");let e=Nl([i,2],0,.2*a[0]),t=Nl([i,2],-.1,.2);t.print(),l={pos:e,vel:t,size:5},u()}(),e.ctx=s};window.onload=function(){console.log("load");wp(this)};
//# sourceMappingURL=index.e19170fe.js.map
